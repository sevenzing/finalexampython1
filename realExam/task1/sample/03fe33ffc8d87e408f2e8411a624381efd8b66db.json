{
    "paper_id": "03fe33ffc8d87e408f2e8411a624381efd8b66db",
    "metadata": {
        "title": "Identifying Infection Sources and Regions in Large Networks",
        "authors": [
            {
                "first": "Wuqiong",
                "middle": [],
                "last": "Luo",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Wee",
                "middle": [
                    "Peng"
                ],
                "last": "Tay",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Mei",
                "middle": [],
                "last": "Leng",
                "suffix": "",
                "affiliation": {},
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "Identifying the infection sources in a network, including the index cases that introduce a contagious disease into a population network, the servers that inject a computer virus into a computer network, or the individuals who started a rumor in a social network, plays a critical role in limiting the damage caused by the infection through timely quarantine of the sources. We consider the problem of estimating the infection sources and the infection regions (subsets of nodes infected by each source) in a network, based only on knowledge of which nodes are infected and their connections, and when the number of sources is unknown a priori. We derive estimators for the infection sources and their infection regions based on approximations of the infection sequences count. We prove that if there are at most two infection sources in a geometric tree, our estimator identifies the true source or sources with probability going to one as the number of infected nodes increases. When there are more than two infection sources, and when the maximum possible number of infection sources is known, we propose an algorithm with quadratic complexity to estimate the actual number and identities of the infection sources. Simulations on various kinds of networks, including tree networks, small-world networks and real world power grid networks, and tests on two real data sets are provided to verify the performance of our estimators. 2 Without prompt identification and isolation of the source servers, significant damage can result [4], [5] . Identifying the servers in the network that are first infected also allows us to detect the latent points of weaknesses in the computer network so that preventive measures can be taken to enhance the protection at these points. The source identification problem also arises in the study of rumor spreading in a social network. A rumor started by a few individuals can spread quickly through the underlying social network [6]- [9] . In many cases, we are interested to find the sources of the rumor. For example, law enforcement agencies may be interested in identifying the perpetrators who fabricate false information to manipulate the market prices of certain stocks.",
            "cite_spans": [
                {
                    "start": 1535,
                    "end": 1538,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 1967,
                    "end": 1970,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "We can model all the above examples as an infection spreading in a network of nodes. In a population network, the infection is the disease that is transmitted between individuals. In the example of a computer virus spreading in a network, the infection is the computer virus, while for the case of a rumor spreading in a social network, the infection is the rumor. We consider the problem of estimating the infection sources in a network of infected nodes. We are interested in the scenario where the only given information is the set of infected nodes and their connections. This is because typically, complete data about the infection spreading process, like the first times when the infection is detected at each node, is not available. Even when such detection times are available, the naive method of declaring the first detected node in the network as the sole infection source is often incorrect, as the infection may have a random dormant period, the length of which varies from node to node. For example, the spreading of a disease in a population with individuals having varying degrees of resistance, and hence exhibiting symptoms not necessarily in the order in which they are infected, presents such a problem. Our goal is to construct estimators for both the infection sources and their infection regions, i.e., the subset of nodes likely to be infected by each source, when the number and locations of the sources are unknown a priori.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Existing works related to infection spreading in a network have primarily focused on the parameters of the diffusion process such as the outbreak thresholds and the effect of network structures [10]- [13] . Little work has been done on identifying the infection sources. Our aim is to identify a set of nodes most likely to be the infection sources after the infection has spread for some time. This formulation is of interest in various practical scenarios, including the spreading of a new disease in a population network. By identifying the initial infectious sources, we can focus scarce resources like DNA testing on a small select group of patients instead of on the whole population.",
            "cite_spans": [
                {
                    "start": 200,
                    "end": 204,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Other examples include identifying the initial entry points of a computer virus into a computer network, and the initiators of a rumor in a social network.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "The case where there is a single infection source has been studied in [14] . Based only on the knowledge of which nodes are infected and the underlying network structure, an estimator based on the linear extensions count of a poset or the number of infection sequences (cf. Section II) was derived to identify the most likely infection source. It was shown in [14] that finding a single infection source is a #P-complete problem even in the case where the infection is relatively simple, with infection from an infected node being equally likely to be transmitted to",
            "cite_spans": [
                {
                    "start": 70,
                    "end": 74,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "With rapid urbanization and advancements in transportation technologies, the world has become more interconnected. A contagious disease like Severe Acute Respiratory Syndrome (SARS) can spread quickly through a population and lead to an epidemic [1] . It is crucial to quickly identify the index cases of a contagious disease since it allows us to study the causes, and hence facilitate the search for antiviral drugs and efficacious therapies.",
            "cite_spans": [
                {
                    "start": 246,
                    "end": 249,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "Moreover, by inferring the the set of individuals infected by each source, potential containment policies can be formulated to prevent further spreading of the disease due to new index cases [2] , [3] . In a similar vein, a computer virus on a few servers of a computer network can quickly spread to other servers or computers in the network. any of its neighbors at each time step. This simple infection model is based on the classical susceptible-infected (SI) model [15] , which has been widely used in modeling viral epidemics [16] - [21] . An algorithm for evaluating the single source estimator was proposed in [14] , and it was shown to have complexity 1 O(n) for tree networks, where n is the total number of infected nodes. Furthermore, it was shown that this estimator performs well in a very general class of tree networks known as the geometric trees (cf. Section III-D), and identifies the infection source with probability going to one as n increases.",
            "cite_spans": [
                {
                    "start": 191,
                    "end": 194,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 197,
                    "end": 200,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 469,
                    "end": 473,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 531,
                    "end": 535,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 538,
                    "end": 542,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 617,
                    "end": 621,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "In many applications, there may be more than one infection source in the network. For example, an infectious disease may be brought into a country through multiple individuals. Multiple individuals may collude in spreading a rumor or malicious piece of information in a social network. In this paper, we investigate the case where there may be multiple infection sources, and when the number of infection sources is unknown a priori. We also consider the problem of estimating the infection region of each source, and show that a direct application of the algorithm in [14] performs significantly worse than our proposed algorithms if there are more than one infection sources.",
            "cite_spans": [
                {
                    "start": 569,
                    "end": 573,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "We also note that [14] provides theoretical performance measures for several classes of tree networks, which we are unable to do here except for the class of geometric trees, because of the greater complexity of our proposed algorithms. Instead, we provide simulation results to verify the performance of our algorithms.",
            "cite_spans": [
                {
                    "start": 18,
                    "end": 22,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "A related problem is the detection and localization of diffusive sources using wireless sensor networks [22] - [27] .",
            "cite_spans": [
                {
                    "start": 104,
                    "end": 108,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 111,
                    "end": 115,
                    "text": "[27]",
                    "ref_id": "BIBREF26"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "The diffusion models used under this framework are based on spatio-temporal diffusion models [22] or state-space models with linear dynamics [23] , where information like the physical positions of sensors are known. There is no natural translation of the source detection and localization problem in a sensor network to other networks like a computer network, without performing discretization and introducing a combinatorial aspect to the problem, as is done in [28] and [29] . Similarly, inference of viral epidemic processes in populations has been studied in [10] , [12] , [15] , where various features related to the propagation of a viral epidemic, such as the rates of infection and the length of latency periods are investigated. These works' focus is on specific viral infection processes with assumptions that do not naturally hold for infection processes in other networks. Moreover, there is little work on determining the sources or index cases of a disease.",
            "cite_spans": [
                {
                    "start": 93,
                    "end": 97,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 141,
                    "end": 145,
                    "text": "[23]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 463,
                    "end": 467,
                    "text": "[28]",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 472,
                    "end": 476,
                    "text": "[29]",
                    "ref_id": "BIBREF28"
                },
                {
                    "start": 563,
                    "end": 567,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 570,
                    "end": 574,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 577,
                    "end": 581,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "On the other hand, the infection source estimation algorithms we consider in this paper can be useful in applications like pollution source localization, where we are limited to inexpensive sensors capable only of detecting the presence or absence of a pollutant, and the identities of its neighbors. In this case, spatio-temporal diffusion models are not applicable as we only have knowledge of which nodes are \"infected\". The algorithms we study in this paper are also applicable to inferring infection sources in viral epidemics, when little information about the epidemic propagation characteristics is available.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "In this paper, we consider the estimation of multiple infection sources when the number of infection sources is unknown a priori. We adopt the same SI diffusion model as in [14] , as this has been widely used to model various infection spreading processes [16] - [21] . The results of this work are applicable to scenarios where the infection spreads in an approximately homogeneous way, with infections happening independently. Examples include the spreading of a new disease in a human population, where nobody has yet developed any immunity to the disease.",
            "cite_spans": [
                {
                    "start": 173,
                    "end": 177,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 256,
                    "end": 260,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 263,
                    "end": 267,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                }
            ],
            "ref_spans": [],
            "section": "B. Our Contributions"
        },
        {
            "text": "A novel computer virus attacking a network can also be modeled using a homogeneous spreading process. On the other hand, our model is highly simplistic and does not model many other spreading processes of practical interest.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Our Contributions"
        },
        {
            "text": "However, as alluded to earlier, finding the infection sources in this simple model is already very challenging.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Our Contributions"
        },
        {
            "text": "The focus of our work is not on modeling infection processes. Rather, by restricting our analysis to the simplest homogeneous exponential spreading model, we hope to gain insights into identifying multiple infection sources in real networks. We show that unlike the single source estimation problem, the multiple source estimation problem is much more complex and cannot be solved exactly even for regular trees. Our main contributions are the following. (iv) For general graphs, when there are at most k max infection sources, we provide an estimation procedure for the infection sources and infection regions. Simulations suggest that on average, our estimators are within a few hops of the true infection sources in the infection graph. 2 (v) We test our estimators on real data in Section V-C. The first test is based on real contact tracing data of a patient cluster during the SARS outbreak in Singapore in 2003. Our estimator correctly identifies the number of index cases for the cluster to be one and successfully finds this index case. The second test considers the Arizona-Southern California cascading power outages in 2011. Our estimator correctly identifies the number of outage sources for the main affected power network to be two, and the distance between our estimators and the real sources are within 1 hop. These tests suggest that our estimator has reasonable performance in 2 In general, we do not know the whole underlying network, but rather the subgraph of infected nodes. For example, in the case of a contagious disease spreading in a population, we only perform contact tracing on the patients to construct the connections among them. From our simulation studies, the infection graph typically has an average diameter of more than 27 hops even though the underlying network's diameter is much smaller. some applications even though we have adopted a simplistic infection model.",
            "cite_spans": [
                {
                    "start": 740,
                    "end": 741,
                    "text": "2",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 1396,
                    "end": 1397,
                    "text": "2",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "B. Our Contributions"
        },
        {
            "text": "The rest of the paper is organized as follows. In Section II, we present the system model and problem formulation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Our Contributions"
        },
        {
            "text": "In Section III, we derive estimators for infection sources and regions for tree networks, and present algorithms to evaluate them. We also show asymptotic results for geometric tree networks. We discuss estimation algorithms for general graphs in Section IV. In Section V, we present simulations and tests on real data to verify the performance of our proposed estimators. Finally we conclude and summarize in Section VI.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Our Contributions"
        },
        {
            "text": "In this section, we describe our model and assumptions, introduce some notations, and present some preliminary results. Consider an undirected graph G = (V, E), where V is the set of nodes and E is the set of edges. If there is an edge connecting two nodes, we say that they are neighbors. The neighborhood N G (v) of a node v is the set of all neighbors of v in G. The length of the shortest path between u and v is denoted as d(u, v). In a computer network, the graph G models the interconnections between computers in the network. In the example of a population or a social network, V is the set of individuals, while an edge in E represents a relationship between two individuals. We define an infection to be a property that a node in G possesses, and can be transmitted to a neighboring node. When a node has an infection, we say that it is infected. The neighbors of an infected node is said to be susceptible. We assume the susceptible-infected model [15] , where once a node has been infected, it will not lose its infection. We adopt the same infection spreading process as in [14] , where the time taken for an infected node to infect a susceptible neighbor is exponentially distributed with rate 1. All infections are independent of each other. Therefore, if a susceptible node has more than one infected neighbors and subsequently becomes infected, its infection is transmitted by one of its infected neighbors, chosen uniformly at random. For mathematical convenience, we also assume that G is large so that boundary effects can be ignored in our analysis.",
            "cite_spans": [
                {
                    "start": 959,
                    "end": 963,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 1087,
                    "end": 1091,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "II. PROBLEM FORMULATION"
        },
        {
            "text": "Suppose that at time 0, there are k \u2265 1 nodes in the infected node set S * = {s 1 , . . . , s k } \u2282 V . These are the infection sources from which all other nodes get infected. Suppose that after the infection process has run for some time, and n nodes are observed to be infected. Typically, n is much larger than k. These nodes form an infection",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. PROBLEM FORMULATION"
        },
        {
            "text": "i be a partition of the infected nodes V n so that A n,i \u2229 A n,j = \u2205 for i = j, with each partition A n,i being connected in G n , and consisting of the nodes whose infection can be traced back to the source node s i . The set A n,i is called the infection region of s i , and we say that A * n is the infection partition. Given G n , our objective is to infer the sources of infection S * and to estimate A * n . In addition, if we do not have prior knowledge of the number of infection sources k, we also aim to infer the number of infection sources. Without loss of generality, we assume that G n is connected, otherwise the same estimation procedure can be performed on each of the components of the graph. We also assume that there are at most k max infection sources, i.e., the number of infection sources k \u2264 k max . From a practical point of view, if two infection sources are close to each other, we can ignore either one of them and treat the infection as spreading from a single source. Therefore, we are interested in cases where the infection sources are separated by a minimum distance. These assumptions are summarized in the following. Assumption 1. The number of infection sources is at most k max , and the infection graph G n is connected.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. PROBLEM FORMULATION"
        },
        {
            "text": "For all s i , s j \u2208 S * , the length of the shortest path between them d(s i , s j ) \u2265 \u03c4 , where \u03c4 is a constant greater than 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumption 2."
        },
        {
            "text": "Assumption 3. Every node in G has bounded degree, with d * being the maximum node degree.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumption 2."
        },
        {
            "text": "Suppose that our priors for S * and A * n are uniform over all possible realizations, and let P be the probability measure of the infection process. We seek S and A n that maximize the posterior probability of S * and A * n given G n ,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumption 2."
        },
        {
            "text": "where P (G n | S) is the probability of observing G n if S is the set of infection sources, and P (A n | S, G n ) is the probability that A * n = A n conditioned on S being the infection source set and the infection graph being G n . For any source set S, let an infection sequence \u03c3 = (\u03c3 1 , . . . , \u03c3 n\u2212k ) be a sequence of the nodes in G n , excluding the the k source nodes in S, arranged in ascending order of their infection times (note that with probability one, no two infection times are the same). For any sequence to be an infection sequence, a necessary and sufficient condition is that any infected node \u03c3 i , i = 1, . . . , n \u2212 k, has a neighbor in S \u222a {\u03c3 1 , . . . , \u03c3 i\u22121 }. We call this the infection sequence property. An example is shown in Figure 1 . Let \u2126(G n , S) be the set of infection sequences for an infection graph G n and source set S, and let C(S | G n ) = |\u2126(G n , S)| be the number of infection sequences.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 760,
                    "end": 768,
                    "text": "Figure 1",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Assumption 2."
        },
        {
            "text": "We have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumption 2."
        },
        {
            "text": "where P (\u03c3 | S) is the probability of obtaining the infection sequence \u03c3 conditioned on S being the infection sources.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumption 2."
        },
        {
            "text": "Evaluating the expression (2) and maximizing (1) for a general G n is a computationally hard problem as it involves combinatorial quantities. As shown in [14] , if G is a regular tree and |S| = 1, P (G n | S) is proportional to |\u2126(G n , S)|, which is equivalent to the number of linear extensions of a poset. It is known that evaluating the linear extensions count is a #P-complete problem [30] . As such, we will make a series of approximations to simplify the problem, and present numerical results in Section V to verify our algorithms. The first approximation we make is to evaluate the estimators\u015c",
            "cite_spans": [
                {
                    "start": 154,
                    "end": 158,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 390,
                    "end": 394,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "Assumption 2."
        },
        {
            "text": "A n (\u015c) = arg max instead of the exact maximum a posteriori (MAP) estimators for (1) . Even with this approximation, the optimal estimators are difficult to compute exactly, and may not be unique in general. Therefore, our goal is to design algorithms that are approximately optimal but computationally efficient. In Section III, we make further approximations and design algorithms to evaluate the estimators\u015c and\u00c2 n (\u015c) when G is a tree. In Section IV, we consider the case when G is a general graph. For the reader's convenience, we summarize some notations commonly used in this paper in Table I . Several notations have been introduced previously, while we formally define the remaining ones in the sequel where they first appear.",
            "cite_spans": [
                {
                    "start": 81,
                    "end": 84,
                    "text": "(1)",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [
                {
                    "start": 592,
                    "end": 599,
                    "text": "Table I",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Assumption 2."
        },
        {
            "text": "In this section, we consider the problem of estimating the infection sources and regions when the underlying network G is a tree. We first derive an estimator for the infection partition in (4), given any source node set S and G n . Then, we derive an estimator based on the number of infection sequences. Next, we consider the case where there are two infection sources, propose approximations that allow us to compute the estimator with reasonable complexity, and show that our proposed estimator works well in an asymptotically large geometric tree under some simplifying assumptions. In most practical applications, the number of infection sources is not known a priori.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "III. IDENTIFYING INFECTION SOURCES AND REGIONS FOR TREES"
        },
        {
            "text": "We present a heuristic algorithm for general trees to estimate the infection sources when the number of infection sources is unknown, but bounded by k max .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "III. IDENTIFYING INFECTION SOURCES AND REGIONS FOR TREES"
        },
        {
            "text": "In this section, we derive an approximate infection partition estimator for (4) given any infection source set S.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. Infection Partition with Multiple Sources"
        },
        {
            "text": "This estimator is exact under a simplifying technical condition given in Theorem 1 below, the proof of which is provided in Appendix A. A Voronoi partition may not produce the optimal estimator for the infection partition in a general infection graph.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. Infection Partition with Multiple Sources"
        },
        {
            "text": "However, it is intuitively appealing as nodes closer to a particular source are more likely to be infected by that source. For simplicity, we will henceforth use the Voronoi partition of the infection graph G n as an estimator for A * n , and present simulation results in Section V to verify its performance. We will also see in Section III-E that this approximation allows us to design an infection source estimation algorithm with low complexity.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Symbol Definition"
        },
        {
            "text": "We now consider the problem of estimating the set of infection sources S * . When |S * | = 1, our estimation problem reduces to that in [14] , which considers only the single source infection problem. In the following, we introduce some notations, and briefly review some relevant results from [14] .",
            "cite_spans": [
                {
                    "start": 136,
                    "end": 140,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 294,
                    "end": 298,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "B. Estimation of Infection Sources"
        },
        {
            "text": "A path between any two nodes u and v in the tree G n is denoted as \u03c1(u, v). For any set of nodes S in G n , consider the connected subgraph H n \u2282 G n consisting of all paths between any pair of nodes in S. Treat this",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Estimation of Infection Sources"
        },
        {
            "text": "subgraph as a \"super\" node, with the tree G n rooted at this \"super\" node. For any node v \u2208 G n \\H n , we define",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Estimation of Infection Sources"
        },
        {
            "text": "T v (S) to be the tree rooted at v with the path from v to H n removed. For v \u2208 H n , we define T v (S) to be the tree rooted at v so that all edges between v and its neighbors in H n are removed. 3 We say that T v (S) is the tree rooted",
            "cite_spans": [
                {
                    "start": 197,
                    "end": 198,
                    "text": "3",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "B. Estimation of Infection Sources"
        },
        {
            "text": "of these definitions is shown in Figure 2 . If S = {s 1 , . . . , s k }, we will sometimes use the notation T v (s 1 , . . . , s k )",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 33,
                    "end": 41,
                    "text": "Figure 2",
                    "ref_id": null
                }
            ],
            "section": "B. Estimation of Infection Sources"
        },
        {
            "text": "instead.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Estimation of Infection Sources"
        },
        {
            "text": "Recall that C(S | G n ) is the number of infection sequences if S is the infection source set. If there is a single infection source node S = {s}, and G is a regular tree where each node has the same degree, it is shown in [14] that the MAP estimator for the infection source is obtained by evaluating\u015c = arg max v\u2208Gn C(v | G n ), which seeks to maximize C(v | G n ) over all nodes. Therefore, it has been suggested that C(v | G n ) can be used as the infection source estimator for general trees. The following result is provided in [14] .",
            "cite_spans": [
                {
                    "start": 223,
                    "end": 227,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 534,
                    "end": 538,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "B. Estimation of Infection Sources"
        },
        {
            "text": "Suppose that G n is a tree. For any node s \u2208 G n , we have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1."
        },
        {
            "text": "We observe that each term |T u (s)| in the product on the right hand side (R.H.S.) of (5) is the number of nodes in the sub-tree T u (s) (and which appears when we account for the number of permutations of these nodes). We can think of the terms in the product being ordered according to the infection spreading sequence, i.e., each time we reach a particular node u, we include terms corresponding to the nodes u can potentially infect. This interpretation is useful in helping us understand the characterization in Lemma 2 for the case where there are two infection sources.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1."
        },
        {
            "text": "To compute C(v | G n ), an O(n) algorithm based on Lemma 1 was provided in [14] . We call this algorithm the Single Source Estimation (SSE) algorithm. We refer the reader to [14] for details about the implementation of the algorithm. Although finding\u015c by maximizing C(s | G n ) is exact only for regular trees, it was shown in [14] that this estimator has good performance for other classes of trees. In particular, if G is a geometric tree (cf. Section III-D), then the probability, conditioned on S * = {s}, of correctly identifying s using C(s | G n ) goes to one as 3 As Tv(S) is defined on Gn, its notation should include Gn. However, in order to avoid cluttered expressions, we drop Gn in our notations. Confusion will be avoided through the context in which these trees are referenced.",
            "cite_spans": [
                {
                    "start": 75,
                    "end": 79,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 174,
                    "end": 178,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 327,
                    "end": 331,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 570,
                    "end": 571,
                    "text": "3",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "Lemma 1."
        },
        {
            "text": "can find the corresponding reverse infection sequence \u03be = (u2, u1, u3). We have I1(\u03be; s1, s2) = |Tu 2 (s1, s2)| = 1, I2(\u03be; s1, s2) =",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1."
        },
        {
            "text": "n \u2192 \u221e. Inspired by this result, we propose estimators based on quantities related to C(S | G n ) for cases where",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1."
        },
        {
            "text": "In the following, we first discuss the case where |S * | = 2, and extend the results to the general case where |S * | is unknown in Section III-E. We then numerically compare our proposed algorithms with a modified SSE algorithm adapted for finding multiple sources in Section V.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1."
        },
        {
            "text": "In this section, we assume that there are two infection sources S = {s 1 , s 2 }. Given two nodes u and v in G n ,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Two Infection Sources"
        },
        {
            "text": "be the total number of nodes in the trees rooted at the first i nodes in the permutation \u03be. We have the following characterization for C(s 1 , s 2 | G n ), whose proof is given in Appendix B.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Two Infection Sources"
        },
        {
            "text": "Suppose that G n is a tree. Consider any two nodes s 1 and s 2 in G n , and suppose that \u03c1(s 1 , s 2 ) = (s 1 , u 1 , . . . , u m , s 2 ). We have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "where for",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "and \u0393(u 1 , u m ) is the set of all permutations \u03be = (\u03be 1 , . . . , \u03be m ) of nodes in \u03c1(u 1 , u m ) such that (\u03be m , . . . , \u03be 1 ) is an infection sequence starting from s 1 and s 2 and resulting in \u03c1(s 1 , s 2 ).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "The characterization for C(s 1 , s 2 | G n ) is similar to that for the single source case in (5), except for the additional q(u 1 , u m ; s 1 , s 2 ) term. We first clarify the meaning of \u0393(u 1 , u m ). Given any infection sequence \u03c3 that starts with",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": ", we can find a permutation \u03be = (\u03be 1 , . . . , \u03be m ) of nodes in \u03c1(u 1 , u m ) such that \u03be i = \u03c3 m\u2212i+1 for i = 1, . . . , m. In other words, \u03be can be interpreted as the reverse infection sequence corresponding to \u03c3. Then \u0393(u 1 , u m ) is the set of all such reverse infection sequences corresponding to \u2126(\u03c1(s 1 , s 2 ), {s 1 , s 2 }). We show an illustration of these definitions in Figure 3 . Each term |T u (s)| in the product in the R.H.S. of (5) can be interpreted as the number of nodes that can be infected via u once u has been infected. Similarly, the sum in (9) is over all possible reverse infection sequences \u03be of the nodes in \u03c1(u 1 , u m ), and each term I i (\u03be; s 1 , s 2 ) in the product within the sum is the number of nodes that can be infected once \u03be i+1 , . . . , \u03be m have been infected.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 383,
                    "end": 391,
                    "text": "Figure 3",
                    "ref_id": "FIGREF6"
                }
            ],
            "section": "Lemma 2."
        },
        {
            "text": "By utilizing Lemma 2, we can compute C(u, v | G n ) for any two nodes u and v in G n by evaluating |T w (u, v)| for all nodes w \u2208 G n , and the quantity q(",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "Algorithm 1 allows us to compute f w (u) = |T w (u)| and g w (u) = v\u2208Tw(u) |T v (u)| for all neighbors u of w, and for all w \u2208 G n in O(n) time complexity. To do this, we first choose any node r \u2208 G n , and consider G n as a directed tree with r as the root node, and with edges in G n pointing away from r. Let pa(w) and ch(w) be the parent and the set of children of w in the directed tree G n , respectively. Starting from the leaf nodes, let each non-root node w \u2208 G n pass two messages containing f w (pa(w)) and g w (pa(w)) to its parent. Each node stores the values of these two messages from each of its children, and computes its two messages to be passed to its parent.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "When r has received all messages from its children, a reverse sweep down the tree is done so that at the end of the algorithm, every node w \u2208 G n has stored the values {f u (w), g u (w) : u \u2208 N Gn (w)}. The algorithm is formally described in Algorithm 1. The last product term on the R.H.S. of (7) can then be computed using",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "and taking its reciprocal.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "To compute C(s 1 , s 2 | G n ) in (7), we still need to compute q(u 1 , u m ; s 1 , s 2 ). The recurrence (8) allows us to compute q(u 1 , u m ; s 1 , s 2 ) for all s 1 , s 2 \u2208 G n in O(n 2 d 2 * ) complexity, where d * is the maximum node degree. The computation proceeds by first considering each pair of neighbors (u, v). Both nodes have at most d * neighbors each, so that we need to evaluate q(u, v; s 1 , s 2 ) for all s 1 \u2208 N Gn (u)\\\u03c1(u, v) and",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "The computed values and T \u03c1(u,v) (s 1 , s 2 ) are stored in a hash table. In the next step, we repeat the same procedure for node pairs that are two hops apart, and so on until we have considered every pair of nodes in G n . Note that for a path (u 1 , . . . , u m ) and s 1 , s 2 neighbors of u 1 and u m respectively, q(u 1 , u m ; s 1 , s 2 ) can be computed in constant time from (8) as q(u 2 , u m ; s 1 , s 2 ) = q(u 2 , u m ; u 1 , s 2 ) and q(u 1 , u m\u22121 ; s 1 , s 2 ) = q(u 1 , u m\u22121 ; s 1 , u m ). A similar remark applies for the computation of |T \u03c1(u1,um) (s 1 , s 2 )|. In addition, each lookup of the hash table takes O(1) complexity since G n is known and collision-free hashing can be used. Therefore, the overall complexity is O(n 2 d 2 * ). The algorithm to compute the infection sources estimator is formally given in Algorithm 2. We call this the Two Source Estimation (TSE) algorithm, and it forms the basis of our algorithm for multiple sources estimation in the sequel. Algorithm 1 Tree Sizes and Products Computation 1: Inputs: G n 2: Choose any node r \u2208 G n as the root node.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "3: for w \u2208 G n do 4: Store received messages f x (w) and g x (w), for each x \u2208 ch(w).",
            "cite_spans": [
                {
                    "start": 18,
                    "end": 20,
                    "text": "4:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Lemma 2."
        },
        {
            "text": "if w is a leaf then 6: f w (pa(w)) = 1 7: g w (pa(w)) = 1 8:",
            "cite_spans": [
                {
                    "start": 20,
                    "end": 22,
                    "text": "6:",
                    "ref_id": null
                },
                {
                    "start": 39,
                    "end": 41,
                    "text": "7:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "5:"
        },
        {
            "text": "else 9 :",
            "cite_spans": [
                {
                    "start": 5,
                    "end": 6,
                    "text": "9",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "5:"
        },
        {
            "text": "13:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "5:"
        },
        {
            "text": "Pass f w (pa(w)) and g w (pa(w)) to pa(w).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "5:"
        },
        {
            "text": "14: end for 15 : Set g pa(r) (r) = 1.",
            "cite_spans": [
                {
                    "start": 12,
                    "end": 14,
                    "text": "15",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "5:"
        },
        {
            "text": "16: for w \u2208 G n do 17: Store received message g pa(w) (w) from pa(w).",
            "cite_spans": [
                {
                    "start": 19,
                    "end": 22,
                    "text": "17:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "5:"
        },
        {
            "text": "if w is not a leaf then 19: for x \u2208 ch(w) do 20 :",
            "cite_spans": [
                {
                    "start": 24,
                    "end": 27,
                    "text": "19:",
                    "ref_id": null
                },
                {
                    "start": 45,
                    "end": 47,
                    "text": "20",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "Pass g w (x) to x.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "end for 23: end if 24 : end for",
            "cite_spans": [
                {
                    "start": 8,
                    "end": 11,
                    "text": "23:",
                    "ref_id": null
                },
                {
                    "start": 19,
                    "end": 21,
                    "text": "24",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "22:"
        },
        {
            "text": "In this section, we study the special case of geometric trees, propose an approximate estimator for geometric trees, and provide theoretical analysis for its performance. First, we give the definition of geometric trees and prove some of its key properties. Then, we derive a lower bound for C(S | G n ), and propose an estimator based on this lower bound. We show that our proposed estimator is asymptotically correct, i.e., it identifies the actual infection sources with probability (conditioned on the infection sources) going to one as the infection graph G n becomes large. For mathematical convenience, instead of letting the number of infected nodes n grow large, we let the time t from the start of the infection process to our observation time become large.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "D. Geometric Trees with Two Sources"
        },
        {
            "text": "The geometric tree network is defined in [14] w.r.t. a single infection source. In the following, we extend this Algorithm 2 Two Source Estimation (TSE) 1: Input: G n 2: Let (s * 1 , s * 2 ) be the maximizer of C(\u00b7, \u00b7 | G n ). Set C * = 0.",
            "cite_spans": [
                {
                    "start": 41,
                    "end": 45,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "D. Geometric Trees with Two Sources"
        },
        {
            "text": "3: for d = 1 to diameter of G n do 4: for each s 1 \u2208 G n do 5: for each s 2 such that d(s 1 , s 2 ) = d do 6: Let \u03c1(s 1 , s 2 ) = (s 1 , u 1 , . . . , u d\u22121 , s 2 ). Look up |T \u03c1(u1,ud\u22122) (s 1 , u d\u22121 )|, q(u 2 , u d\u22121 ; u 1 , s 2 ), and q(u 1 , u d\u22122 ; s 1 , u d\u22121 ).",
            "cite_spans": [
                {
                    "start": 35,
                    "end": 37,
                    "text": "4:",
                    "ref_id": null
                },
                {
                    "start": 60,
                    "end": 62,
                    "text": "5:",
                    "ref_id": null
                },
                {
                    "start": 107,
                    "end": 109,
                    "text": "6:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "D. Geometric Trees with Two Sources"
        },
        {
            "text": "Store",
            "cite_spans": [],
            "ref_spans": [],
            "section": "13:"
        },
        {
            "text": "14:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "13:"
        },
        {
            "text": "Store q(u 1 , u d\u22121 ; s 1 , s 2 ) = q(u 2 , u d\u22121 ; u 1 , s 2 ) + q(u 1 , u d\u22122 ; s 1 , u d\u22121 ) |T \u03c1(u1,ud\u22121) (s 1 , s 2 )| .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "13:"
        },
        {
            "text": "end if 16: Compute g(s 1 , s 2 ) from (10).",
            "cite_spans": [
                {
                    "start": 7,
                    "end": 10,
                    "text": "16:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "15:"
        },
        {
            "text": "C(s 1 , s 2 | G n ) = (n \u2212 2)!q(u 1 , u d\u22121 ; s 1 , s 2 )/g(s 1 , s 2 ).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "17:"
        },
        {
            "text": "Update (s * 1 , s * 2 ) and C * if C(s 1 , s 2 | G n ) > C * . 19: end for 20: end for 21: end for definition to the case where there are two sources. Let S * = {s 1 , s 2 } be the infection sources, and let T \u2032 u (s 1 , s 2 ) be defined in the graph G in the same way as T u (s 1 , s 2 ) is defined for G n . Let N G (\u03c1(s 1 , s 2 )) be the set of nodes that have a neighboring node in \u03c1(s 1 , s 2 ). For each node u, let n(u, r) be the number of nodes in T \u2032 u (s 1 , s 2 ) that are at a distance r from u. We say that G is a geometric tree if for all u \u2208 N (\u03c1(s 1 , s 2 )), we have br \u03b1 \u2264 n(u, r) \u2264 cr \u03b1 ,",
            "cite_spans": [
                {
                    "start": 63,
                    "end": 66,
                    "text": "19:",
                    "ref_id": null
                },
                {
                    "start": 75,
                    "end": 78,
                    "text": "20:",
                    "ref_id": null
                },
                {
                    "start": 87,
                    "end": 90,
                    "text": "21:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "where \u03b1, b, and c are fixed positive constants with b \u2264 c. The condition (11) implies that all trees defined w.r.t.",
            "cite_spans": [
                {
                    "start": 73,
                    "end": 77,
                    "text": "(11)",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "the infection sources are growing polynomially fast at about the same rate. As we have assumed that the infection rates are homogeneous for every node, the resulting infection graph G n will also be approximately regular with high probability. We have the following properties for a geometric tree, whose proofs are in Appendix C. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "where",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "and",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "In addition, for t \u2265 t 0 , we have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "The infection sequences count in (7) is not amendable to analysis. In the following, we seek an approximation to simplify our analysis. For s 1 , s 2 \u2208 G n , suppose that \u03c1(s 1 , s 2 ) = (s 1 , u 1 , . . . , u m , s 2 ), with p = |\u03c1(s 1 , s 2 )| = m + 2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "Instead of computing C(s 1 , s 2 | G n ), we consider a new infection graph G \u2032 n with two \"virtual\" nodes x i , i = 1, 2 added, where x i is attached to s i (see Figure 4) . We now consider the infection sequence count C(x 1 , x 2 | G \u2032 n ) \u2265 C(s 1 , s 2 | G n ). Since the trees rooted at x i are single node trees, we have",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 163,
                    "end": 172,
                    "text": "Figure 4)",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "18:"
        },
        {
            "text": "where the last inequality follows because if s 1 and x 2 are sources, then s 2 can be inserted in any of at most n \u2212 1 positions in an infection sequence from \u2126(G n , {s 1 , s 2 }), so that C(s 1 ,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "Let \u03be * = (\u03be * 1 , . . . , \u03be * p ) be a permutation of the nodes in \u03c1(s 1 , s 2 ) such that |T \u03be * i (s 1 , s 2 )| \u2265 |T \u03be * j (s 1 , s 2 )| for all 1 \u2264 i \u2264 j \u2264 p, i.e., the nodes in \u03be * are arranged in descending order of the size of the sub-trees rooted at them.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "Let I * i (s 1 , s 2 ) = I i (\u03be * ; s 1 , s 2 ) (cf. the definition in (6)) be the total number of nodes in the i biggest sub-trees in {T u (s 1 , s 2 ) : u \u2208 \u03c1(s 1 , s 2 )}. From Lemma 2, we have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "where the inequality holds because |\u0393(s 1 , s 2 )| = 2 p\u22121 , and each term in the sum on the R.H.S. of (9) is lower bounded by p i=1 I * i (s 1 , s 2 ) \u22121 . We use the lower bound in (15) as a proxy for C(s 1 , s 2 | G n ). However, we have used a very loose lower bound in (15) , so we propose the estimator",
            "cite_spans": [
                {
                    "start": 274,
                    "end": 278,
                    "text": "(15)",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "whereC",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "and \u03b4 is a fixed positive constant, to be chosen based on prior knowledge about the graph G. Algorithm 2 can be modified to find the maximizer forC(\u00b7, \u00b7 | G n ). We call this the geometric tree TSE algorithm. The following result provides a way to choose \u03b4, and shows that our proposed estimatorS is asymptotically correct in a geometric tree.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "A proof is provided in Appendix D.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "18:"
        },
        {
            "text": "Suppose that G is a geometric tree with two infection sources S * = {s * 1 , s * 2 }. Let d min and d max be constants such that deg G (s i ) \u2208 [d min , d max ] for i = 1, 2. Let b and c be fixed positive constants satisfying (11) for the geometric tree G. Suppose that",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 2."
        },
        {
            "text": "Then, for any \u03b4 in the non-empty interval",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 2."
        },
        {
            "text": "we have lim t\u2192\u221e P(S = S * | S * ) = 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 2."
        },
        {
            "text": "Theorem 2 implies that if we know the constants governing the regularity condition (11) for G, we can choose a \u03b4 so that our estimatorS gives the true infection sources with high probability if the infection graph G n is large. The class of geometric trees as defined by (11) can be used to model various scenarios in practice, e.g., a tree spanning a wireless sensor network with nodes randomly scattered. However, the assumption (11) may also be overly strong for other applications. In Section V, we perform numerical studies to gain insights into the performance of our proposed estimator for different classes of tree networks.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 2."
        },
        {
            "text": "In most practical applications, the number of infection sources is not known a priori. However, typically we may be able to guess the maximum number of infection sources k max , or we can choose a reasonable value of k max depending on the size of the infection graph G n . In this section, we present a heuristic algorithm that allows us to estimate the infection sources with a given k max .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "E. Unknown Number of Infection Sources"
        },
        {
            "text": "We first consider the instructive case where k max = 2 and G is a geometric tree. In this case, the number of infection sources can be either one or two. Suppose we run the geometric tree TSE algorithm on G n . We have the following result, whose proof is in Appendix E. (11) (i) Randomly choose k max nodes satisfying Assumption 2 as the infection sources and find a Voronoi partition for G n . Use the SSE algorithm to find a source node for each infection region. Repeat these steps until for every region, the distance between estimated source nodes between iterations is below a fixed threshold or a maximum number of iterations is reached. We call this the Infection Partition (IP) Algorithm (see Algorithm 3).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "E. Unknown Number of Infection Sources"
        },
        {
            "text": "(ii) For any two regions in the partition obtained from step (i) that are connected by an edge in G n , run the TSE algorithm in the combined region to find two source estimates. If the two estimates have distance less than \u03c4 , we decrement the number of source nodes, and repeat step (i). Run the Voronoi partitioning algorithm with centers in S (l\u22121) to obtain the infection partition",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 3. Suppose that there is a single infection source s and G is a geometric tree with"
        },
        {
            "text": "i .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 3. Suppose that there is a single infection source s and G is a geometric tree with"
        },
        {
            "text": "for i = 1 to m do 6: Run SSE algorithm in A ",
            "cite_spans": [
                {
                    "start": 18,
                    "end": 20,
                    "text": "6:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "5:"
        },
        {
            "text": "In this section, we generalize the MSEP algorithm to identify multiple infection sources in general graphs G.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "IV. IDENTIFYING INFECTION SOURCES AND REGIONS FOR GENERAL GRAPHS"
        },
        {
            "text": "In [14] , the SSE algorithm is extended to general graphs when it is known that there is only a single infection source in the network using a heuristic. The algorithm first chooses a node s of G n as the root node, and generates a spanning tree T bfs (s, G n ) of G n rooted at s using the breadth-first-search (BFS) procedure. The SSE algorithm is then applied on this spanning tree to compute C(s | T bfs (s, G n )). In addition, the infection sequences count is weighted by the likelihood of the BFS tree. This is repeated using every node in G n as the root node, and the nod\u00ea s with the maximum weighted infection sequences count is chosen as the source estimator, i.e.,",
            "cite_spans": [
                {
                    "start": 3,
                    "end": 7,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "IV. IDENTIFYING INFECTION SOURCES AND REGIONS FOR GENERAL GRAPHS"
        },
        {
            "text": "where \u03c3 v is the sequence of nodes that corresponds to an infection spreading from v along the BFS tree. It can be shown that this algorithm has complexity O(n 2 ). For further details, the reader is referred to [14] . We call this algorithm the SSE-BFS algorithm in this paper.",
            "cite_spans": [
                {
                    "start": 212,
                    "end": 216,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "IV. IDENTIFYING INFECTION SOURCES AND REGIONS FOR GENERAL GRAPHS"
        },
        {
            "text": "We adapt the MSEP algorithm for general graphs using the same BFS heuristic. Specifically, we replace the SSE algorithm in line 6 of the IP algorihm with the SSE-BFS algorithm. In addition, in line 9, we run the TSE for all regions A i and A j in the partition A such that there exists an edge (u, v) in G n with u \u2208 A i and v \u2208 A j do 9: Set (u, v) = Algorithm TSE(A i \u222a A j ). 10: if d(u, v) < \u03c4 then 11: Merge A i and A j , set s i = u and discard s j",
            "cite_spans": [
                {
                    "start": 336,
                    "end": 338,
                    "text": "9:",
                    "ref_id": null
                },
                {
                    "start": 379,
                    "end": 382,
                    "text": "10:",
                    "ref_id": null
                },
                {
                    "start": 403,
                    "end": 406,
                    "text": "11:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "IV. IDENTIFYING INFECTION SOURCES AND REGIONS FOR GENERAL GRAPHS"
        },
        {
            "text": "k := k \u2212 1 13: break 14: end if 15: end for 16: if S = S \u2032 then 17: break 18: end if 19 : end while 20: return (S, A) (u, v) in G n with u \u2208 T bfs (s i , A i ) and v \u2208 T bfs (s j , A j ). We call this modified algorithm the MSEP-BFS algorithm.",
            "cite_spans": [
                {
                    "start": 11,
                    "end": 14,
                    "text": "13:",
                    "ref_id": null
                },
                {
                    "start": 21,
                    "end": 24,
                    "text": "14:",
                    "ref_id": null
                },
                {
                    "start": 32,
                    "end": 35,
                    "text": "15:",
                    "ref_id": null
                },
                {
                    "start": 44,
                    "end": 47,
                    "text": "16:",
                    "ref_id": null
                },
                {
                    "start": 64,
                    "end": 67,
                    "text": "17:",
                    "ref_id": null
                },
                {
                    "start": 74,
                    "end": 77,
                    "text": "18:",
                    "ref_id": null
                },
                {
                    "start": 85,
                    "end": 87,
                    "text": "19",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 100,
                    "end": 103,
                    "text": "20:",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "12:"
        },
        {
            "text": "Since the worst case complexity for the SSE-BFS algorithm is O(n 2 ), the complexity of the MSEP-BFS algorithm can be shown to be O(k 3 max n 2 ), which is the same complexity as the MSEP algorithm. To verify the effectiveness of the MSEP-BFS algorithm, we conduct simulations on both synthetic and real world networks in Section V.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "12:"
        },
        {
            "text": "In this section, we present results from simulations and tests on real data to verify our proposed algorithms. We first consider geometric tree networks and regular tree networks with various numbers of infection sources, and then we present results on small-world networks and a real world power grid network. We also apply our algorithms to the contact tracing data obtained during the SARS outbreak in Singapore in 2003 [1] and the Arizona-Southern California cascading power outages in 2011 [31] . ",
            "cite_spans": [
                {
                    "start": 423,
                    "end": 426,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 495,
                    "end": 499,
                    "text": "[31]",
                    "ref_id": "BIBREF30"
                }
            ],
            "ref_spans": [],
            "section": "V. SIMULATION RESULTS AND TESTS"
        },
        {
            "text": "We perform simulations on geometric trees, regular trees, and small-world networks. The number of infection sources |S * | are chosen to be 1, 2, or 3, and we set k max = 3. Figure 5 . It can be seen that our algorithm correctly finds the number of infection sources more than 93% of the time for geometric trees, and more than 71% of the time for regular trees. The accuracy of about 69.2% for small-world networks is worse than that for the tree networks, as the infection tree for a small-world network has to be estimated using the BFS heuristics, thus additional errors are introduced into the procedure.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 174,
                    "end": 182,
                    "text": "Figure 5",
                    "ref_id": "FIGREF11"
                }
            ],
            "section": "A. Synthetic Networks"
        },
        {
            "text": "When there are more than one infection sources, we compare the performance of the MSEP algorithm with a naive estimator based on the SSE algorithm. We call this the nSSE algorithm. Specifically, in the estimator for tree networks, we first compute C(u | G n ) for all nodes u \u2208 G n , and choose the |S * | nodes with the largest counts as the source nodes. In non-tree networks, we use the SSE-BFS algorithm. Since the nSSE algorithm can not estimate |S * |, we consider two variants. In the first variant, we assume the nSSE algorithm has prior knowledge of |S * |. In the second variant, we guess |S * | by choosing uniformly from {1, . . . , k max }.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. Synthetic Networks"
        },
        {
            "text": "To quantify the performance of each algorithm, we first match the estimated source nodes\u015c = {\u015d i : i = 1, . . . , |\u015c|} with the actual sources S * so that the sum of the error distances between each estimated source and its match is minimized. Let this matching be denoted by the function \u03c0, which matches each actual source s i t\u00f4 s \u03c0(i) . If we have incorrectly estimated the number of infection sources, i.e., |\u015c| = |S * |, we add a penalty term to this sum. The average error distance is then given by",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. Synthetic Networks"
        },
        {
            "text": "where \u03b7 is a penalty weight for incorrectly estimating the number of infection sources. For different applications, we may assign different values to \u03b7 depending on how important it is to estimate correctly the number of infection sources. In our simulations, we consider the cases where \u03b7 = 0, and where \u03b7 is the diameter of the infection graph.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. Synthetic Networks"
        },
        {
            "text": "The average error distances for the different types of networks are provided in Table II . Clearly, the MSEP/MSEP-BFS algorithm outperforms the nSSE algorithm, even when the nSSE algorithm has prior knowledge of the number of sources. When |S * | is known a priori, the performance of the nSSE algorithm deteriorates with increasing |S * |. This is to be expected as the SSE algorithm assumes that the node with the largest infection sequence count is the only source, and this node tends to be close to the distance center [32] of the infection graph. The histogram of the average error distances when \u03b7 = 0 are shown in Figure 6 .",
            "cite_spans": [
                {
                    "start": 524,
                    "end": 528,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                }
            ],
            "ref_spans": [
                {
                    "start": 80,
                    "end": 88,
                    "text": "Table II",
                    "ref_id": "TABREF0"
                },
                {
                    "start": 622,
                    "end": 630,
                    "text": "Figure 6",
                    "ref_id": "FIGREF15"
                }
            ],
            "section": "A. Synthetic Networks"
        },
        {
            "text": "The MSEP/MSEP-BFS algorithm also estimates the infection region of each source. To evaluate its accuracy, we first perform the matching process described previously. Let the true infection region of s i be A n,i and the estimated infection region of\u015d \u03c0(i) be\u00c2 n,i , where we set\u00c2 n,i = \u2205, if we have underestimated the number of sources and s i is unmatched. We define the correct infection region covering percentage for s i as the ratio between |\u00c2 n,i \u2229 A n,i | and |A n,i |, and we compute the minimum (or worst case) infection region covering percentage as min i\u2208{1,\u00b7\u00b7\u00b7 ,|S * |}",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. Synthetic Networks"
        },
        {
            "text": "This is then averaged over all simulation runs. We find that the average minimum infection region covering percentage is more than 59% for all networks, as shown in Table II .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 165,
                    "end": 173,
                    "text": "Table II",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "A. Synthetic Networks"
        },
        {
            "text": "We verify the performance of the MSEP-BFS algorithm on the western states power grid network of the United",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Real World Networks"
        },
        {
            "text": "States [33] . We simulate the infection spreading process on the power grid network, which contains 4941 nodes.",
            "cite_spans": [
                {
                    "start": 7,
                    "end": 11,
                    "text": "[33]",
                    "ref_id": "BIBREF32"
                }
            ],
            "ref_spans": [],
            "section": "B. Real World Networks"
        },
        {
            "text": "For each simulation run, 1, 2 or 3 infection sources are randomly chosen from the power grid network under Assumption 2, and the spreading process is simulated so that a total of 500 nodes are infected. For each value of |S * |, 1000 simulation runs are performed. The simulation results are shown in Figures 5 and 6(d) , and Table II . We see that the MSEP-BFS algorithm outperforms the nSSE algorithm in every scenario. The average infection region covering percentage is above 59%.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 301,
                    "end": 319,
                    "text": "Figures 5 and 6(d)",
                    "ref_id": "FIGREF11"
                },
                {
                    "start": 326,
                    "end": 334,
                    "text": "Table II",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "B. Real World Networks"
        },
        {
            "text": "In order to get some insights in the performance of the MSEP-BFS algorithm in real infection spreads, we conduct two tests on real infection spreads data. We first apply the MSEP-BFS algorithm to to a network of nodes that represent the individuals who were infected with the SARS virus during an epidemic in Singapore in the year 2003. The data is collected using contact tracing of patients [1] , where an edge between two nodes indicate that there is some form of interaction or relationship between the individuals (e.g., they are family members, classmates, colleagues, or commuters who shared the same public transport system). A part of the SARS infection network corresponding to a cluster of 193 patients is shown in Figure 7 . We test the MSEP-BFS algorithm on the network in Figure 7 , assuming that there are at most k max = 3 infection sources. It turns out that the MSEP-BFS algorithm correctly estimates the number of infection sources to be one, and correctly identifies the real infection source.",
            "cite_spans": [
                {
                    "start": 393,
                    "end": 396,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [
                {
                    "start": 726,
                    "end": 734,
                    "text": "Figure 7",
                    "ref_id": "FIGREF16"
                },
                {
                    "start": 786,
                    "end": 794,
                    "text": "Figure 7",
                    "ref_id": "FIGREF16"
                }
            ],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "We next consider the Arizona-Southern California cascading power outages in 2011 [31] . The affected power network is represented by a graph where a node represents a key facility (substation or generating plant) affected by an outage, and an edge between two nodes indicate that there is a transmission line between these two facilities. The Figure 8 . We test the MSEP-BFS algorithm on the network in Figure 8 , and assume that there are at most k max = 3 infection sources. We can see that the MSEP-BFS algorithm correctly estimates the number of infection sources to be two. We also found one of the sources correctly, and one estimate 1 hop away from the real source. In this paper, we have adopted a simple SI infection model with homogeneous spreading rates, allowing us to derive analytical results that provide useful insights into infection source estimation for practical networks.",
            "cite_spans": [
                {
                    "start": 81,
                    "end": 85,
                    "text": "[31]",
                    "ref_id": "BIBREF30"
                }
            ],
            "ref_spans": [
                {
                    "start": 343,
                    "end": 351,
                    "text": "Figure 8",
                    "ref_id": "FIGREF17"
                },
                {
                    "start": 403,
                    "end": 411,
                    "text": "Figure 8",
                    "ref_id": "FIGREF17"
                }
            ],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "However, this simplistic diffusion model does not adequately capture the real world dynamics of many networks.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "Future research includes the use of richer diffusion models that allow the inclusion of drifts and other dynamics in the infection spreading process, and tools from statistics to approximate optimal estimators for the infection sources. Our proposed algorithms find a set of nodes most likely to infect or influence a network, and are thus potentially useful for various practical applications. For example, our algorithm may be integrated with non-modelbased consensus methods [34] , [35] to design multi-agent control systems that uses only a small subset of agents as controllers. In cloud-centric media platforms [36] , variants of our proposed algorithm may be used for intelligent ",
            "cite_spans": [
                {
                    "start": 478,
                    "end": 482,
                    "text": "[34]",
                    "ref_id": "BIBREF33"
                },
                {
                    "start": 485,
                    "end": 489,
                    "text": "[35]",
                    "ref_id": "BIBREF34"
                },
                {
                    "start": 617,
                    "end": 621,
                    "text": "[36]",
                    "ref_id": "BIBREF35"
                }
            ],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "where \u2126(H n , S, A n ) = {\u03c3 \u2208 \u2126(H n , S) : \u03c3 \u2229 A n,i is an infection sequence, for all i = 1, . . . , k.}, and \u03c3 \u2229 A n,i is the subsequence of \u03c3 containing only nodes that are in A n,i .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "Let h = |H n | \u2212 k, and consider an infection sequence \u03c3 = (\u03c3 1 , . . . , \u03c3 h ) \u2208 \u2126(H n , S, A n ). Let the set of edges connecting susceptible nodes to infected nodes be called the susceptible edge set. We have assumed that the infection times of susceptible nodes are independent and identically exponentially distributed. Therefore, given the infection sequence \u03c3 1 , . . . , \u03c3 l\u22121 , the next edge along which the infection is spread is chosen uniformly at random from the susceptible edge set at time index l \u2212 1. Since H n is a tree where all nodes except those in S have degree 2, after infection of a new node, the susceptible edge set size remains the same except in the case where the infected node is the last node to be infected amongst those on a path connecting two infection sources. In that case, the susceptible edge set size reduces by 2. Let J \u03c3 be the set of indices of the last infected nodes on every path connecting infection sources. Letting n l = 1 if l / \u2208 J \u03c3 and 2 otherwise, we then have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "where p is the number of paths connecting infection sources, and This shows that the estimator\u00c2 n (S) is a Voronoi partition of G n , and the proof is complete.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "To simplify notations, we write T u (s 1 , s 2 ) as T u , with the implicit understanding that all trees are defined w.r.t. The n \u2212 2 slots in a sequence are occupied by nodes from T si \\{s i }, i = 1, 2, and T \u03c1(u1,um) . Therefore, we have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "where R(u i , u j ) for i \u2264 j is the number of ways of permuting the nodes in T \u03c1(ui,uj) such that the infection sequence property is maintained, and the last equality follows from Lemma 1. To simplify the notations, for",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "For example, from Lemma 1, we have C(u i | T ui ) = (|T ui | \u2212 1)!J(u i , u i ). In the following, we show that for",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "The proof proceeds by induction on j \u2212 i. If j = i, we have R(u i , u i ) = C(u i | T ui ) and the claim follows from Lemma 1. Suppose that the claim (23) holds for all nodes u k and u p such that p \u2212 k < j \u2212 i. The number of permutations R(u i , u i ) can be computed by considering a sequence with m = |T \u03c1(ui,uj) | slots. The first slot can be filled with either u i or u j . Therefore, we have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "where the penultimate equality follows from the inductive hypothesis and Lemma 1, and the last equality follows",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "The claim (23) now follows from (8).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "Finally, (9) follows by an inductive argument using (8), which we omit. The proof is now complete.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "APPENDIX C PROOF OF LEMMA 3",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "The proof follows easily from Theorems 5 and 6 of [14] . Consider the infection spreading along a path in G n . Let \u03a0(t) be the counting process of the number of infected nodes in this path. The process \u03a0(t) consists of exponentially distributed arrivals with rate 1, and at most one arrival with rate 2 if the path is between the two infection sources.",
            "cite_spans": [
                {
                    "start": 50,
                    "end": 54,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "Let \u03a0 1 (t) be a unit rate Poisson process corresponding to the rate 1 arrivals. Then \u03a0 1 (t) \u2264 \u03a0(t) \u2264 \u03a0 1 (t) + 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "From Theorem 6 of [14] , we have for any positive \u03b3 < 0.2,",
            "cite_spans": [
                {
                    "start": 18,
                    "end": 22,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "The rest of the proof is the same as that of Theorem 5 of [14] , and the proof is complete.",
            "cite_spans": [
                {
                    "start": 58,
                    "end": 62,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "APPENDIX D",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Tests on Real Data"
        },
        {
            "text": "We first show that under (18) , the interval (19) is non-empty. The condition (18) implies that Fig. 9 . Illustration of the network structure when u0 = v0. Not all nodes are shown.",
            "cite_spans": [
                {
                    "start": 25,
                    "end": 29,
                    "text": "(18)",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 78,
                    "end": 82,
                    "text": "(18)",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [
                {
                    "start": 96,
                    "end": 102,
                    "text": "Fig. 9",
                    "ref_id": null
                }
            ],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "which after some algebraic manipulations yields",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "Therefore (19) is a non-empty interval. Fix a \u03b4 in the interval. Then for all \u01eb > 0 sufficiently small, we have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "Recall that t is the time from the start of the infection spreading to our observation of G n . From Lemma 3, for each \u01eb, there exists t 0 such that if t \u2265 t 0 , we have",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "We will make use of the two inequalities (24) and (25) extensively in the following proof steps. Let E t be the event defined in Lemma 3. Then from Lemma 3, we have for t \u2265 t 0 ,",
            "cite_spans": [
                {
                    "start": 41,
                    "end": 45,
                    "text": "(24)",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 50,
                    "end": 54,
                    "text": "(25)",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "In the following, we show that P(S = S | S, E t ) = 1 for t \u2265 t 0 . The proof then follows from (26) as \u01eb can be chosen arbitrarily small.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "To show that P(S = S | S, E t ) = 1 is equivalent to showing that with probability one,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "for all node pairs u m , v l \u2208 G n such that at least one of them is not in S. Let u 0 and v 0 be the first nodes in \u03c1(s 1 , s 2 )",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "that are connected to u m and v l respectively. We divide the proof into two cases, depending on whether u 0 and v 0 are distinct or not, as shown in Figures 9 and 10 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 150,
                    "end": 166,
                    "text": "Figures 9 and 10",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "Suppose that u 0 = v 0 . A typical network for this case is shown in Figure 9 , where m, l, n, p, and k are nonnegative integers, and at least one of u m and v l is not in S, i.e., either m + l > 0 or n + p > 0. We let u 0 = s 1 if n = 0, and v 0 = s 2 if p = 0.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 69,
                    "end": 77,
                    "text": "Figure 9",
                    "ref_id": null
                }
            ],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "We will show that if either m + l > 0 or n + p > 0, we have for t \u2265 t 0 ,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "The proof follows by showing thatC(u 0 , v 0 | G n ) \u2265C(u m , v l | G n ), where strict inequality holds if m + l > 0, andC(s 1 , s 2 | G n ) \u2265C(u 0 , v 0 | G n ) with strict inequality holding if n + p > 0. From (17), we have 4",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "if m + l > 0. The first inequality follows because I * m+l+i (u m , v l ) \u2265 I * i (u 0 , v 0 ) for i = 1, . . . , k + 2, and the last inequality follows from (25) when t \u2265 t 0 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "Let \u03c8 = deg G (s 1 ) + deg G (s 1 ). We have for t \u2265 t 0 ,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "\u00b7 w\u2208\u03c1(s1,x1)\u222a\u03c1(y1,s2)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "|T w (u 0 , v 0 )| \u2265 [2(1 + \u03b4)] n+p \u00b7 n+p+k+2 i=k+3 I * i (s 1 , s 2 ) \u22121 \u00b7 w\u2208\u03c1(s1,x1)\u222a\u03c1(y1,s2)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "where the first inequality follows because I * i (u 0 , v 0 ) \u2265 I * i (s 1 , s 2 ) for i = 1, . . . , k + 2, and the last inequality follows from (24) if n + p > 0. The bound (27) is now proved.",
            "cite_spans": [
                {
                    "start": 175,
                    "end": 179,
                    "text": "(27)",
                    "ref_id": "BIBREF26"
                }
            ],
            "ref_spans": [],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "We next consider the case where u 0 = v 0 = w 0 in Figure 10 , where k, m and l are non-negative integers. When t \u2265 t 0 , we have the following bounds, which are straight forward to verify and whose proofs are omitted here. where the last inequality follows from (24) and (25) . The theorem is now proved.",
            "cite_spans": [
                {
                    "start": 272,
                    "end": 276,
                    "text": "(25)",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [
                {
                    "start": 51,
                    "end": 60,
                    "text": "Figure 10",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "PROOF OF THEOREM 2"
        },
        {
            "text": "Let t be the elapsed time from the start of an infection spreading from a single s to the time we observe G n . We wish to show that Algorithm TSE estimates as sources s and one of its neighbors with probability (conditioned on s being the infection source) converging to 1 as t \u2192 \u221e. This is equivalent to showing that for t sufficiently large, and for each pair of nodes u m , v l \u2208 G n where either d(u m , s) > 1 or d(v l , s) > 1, there exists a neighbor r of s such thatC(s, r | G n ) >C(u m , v l | G n ).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "APPENDIX E PROOF OF THEOREM 3"
        },
        {
            "text": "A typical network is shown in Figure 11 , where k, m and l are non-negative integers. If m, l and k are positive, we let r be the neighbor of s that lies on the path connecting s to u m (i.e., the node w 1 in Figure 11 ). If m and l are positive and k = 0, then r is chosen to be either u 1 or v 1 . If m = 0, we must have k > 0 so that w k = u m and r = w 1 . A similar remark applies for the case l = 0. Note that m + l > 0. For t sufficiently large, we hav\u1ebd C(s, r | G n ) C(u m , v l | G n ) = Q(s, r) Q(u m , v l ) \u00b7 w\u2208Gn\\\u03c1(um,vl)",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 30,
                    "end": 39,
                    "text": "Figure 11",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 209,
                    "end": 218,
                    "text": "Figure 11",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "APPENDIX E PROOF OF THEOREM 3"
        },
        {
            "text": "|T w (u m , v l )| w\u2208Gn\\{s,r} |T w (s, r)|",
            "cite_spans": [],
            "ref_spans": [],
            "section": "APPENDIX E PROOF OF THEOREM 3"
        },
        {
            "text": "|T w (s, r)|",
            "cite_spans": [],
            "ref_spans": [],
            "section": "APPENDIX E PROOF OF THEOREM 3"
        },
        {
            "text": "|T w (s, r)|",
            "cite_spans": [],
            "ref_spans": [],
            "section": "APPENDIX E PROOF OF THEOREM 3"
        },
        {
            "text": "where the last inequality follows from (25) and Lemma 3. The proof of the theorem is now complete.",
            "cite_spans": [
                {
                    "start": 39,
                    "end": 43,
                    "text": "(25)",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "APPENDIX E PROOF OF THEOREM 3"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Epidemiology and control of SARS in Singapore",
            "authors": [
                {
                    "first": "K.-T",
                    "middle": [],
                    "last": "Goh",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Cutter",
                    "suffix": ""
                },
                {
                    "first": "B.-H",
                    "middle": [],
                    "last": "Heng",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ma",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "K W"
                    ],
                    "last": "Koh",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Kwok",
                    "suffix": ""
                },
                {
                    "first": "C.-M",
                    "middle": [],
                    "last": "Toh",
                    "suffix": ""
                },
                {
                    "first": "S.-K",
                    "middle": [],
                    "last": "Chew",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "Annals Of The Academy Of Medicine Singapore",
            "volume": "35",
            "issn": "5",
            "pages": "301--316",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Efficient mitigation strategies for epidemics in rural regions",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Scoglio",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Schumm",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Schumm",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Easton",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "Roy"
                    ],
                    "last": "Chowdhury",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Sydney",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Youssef",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "PLoS ONE",
            "volume": "5",
            "issn": "7",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Finding and evaluating community structure in networks",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Newman",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Girvan",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "Phys. Rev. E",
            "volume": "69",
            "issn": "2",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Directed-graph epidemiological models of computer viruses",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "O"
                    ],
                    "last": "Kephart",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "R"
                    ],
                    "last": "White",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "Proc. IEEE Computer Society Symp Research in Security and Privacy",
            "volume": "",
            "issn": "",
            "pages": "343--359",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Source tracing and pursuing of network virus",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Han",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Han",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Deng",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Yu",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "Proc. 8th IEEE International Conference on Computer and Information Technology Workshops",
            "volume": "",
            "issn": "",
            "pages": "230--235",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Twitterrank: finding topic-sensitive influential twitterers",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Weng",
                    "suffix": ""
                },
                {
                    "first": "E.-P",
                    "middle": [],
                    "last": "Lim",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Jiang",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "Proc. 3rd ACM International Conference on Web Search and Data Mining",
            "volume": "",
            "issn": "",
            "pages": "261--270",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Everyone's an influencer: quantifying influence on Twitter",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Bakshy",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "M"
                    ],
                    "last": "Hofman",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "A"
                    ],
                    "last": "Mason",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "J"
                    ],
                    "last": "Watts",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Proc. 4th ACM International Conference on Web Search and Data Mining",
            "volume": "",
            "issn": "",
            "pages": "65--74",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Determining content power users in a blog network: an approach and its applications",
            "authors": [
                {
                    "first": "S.-H",
                    "middle": [],
                    "last": "Lim",
                    "suffix": ""
                },
                {
                    "first": "S.-W",
                    "middle": [],
                    "last": "Kim",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Park",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "H"
                    ],
                    "last": "Lee",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "IEEE Trans. Syst",
            "volume": "41",
            "issn": "5",
            "pages": "853--862",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Identifying the productive and influential bloggers in a community",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Akritidis",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Katsaros",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Bozanis",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "IEEE Trans. Syst",
            "volume": "41",
            "issn": "5",
            "pages": "759--764",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Epidemics and percolation in small-world networks",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Moore",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "E J"
                    ],
                    "last": "Newman",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "Phys. Rev. E",
            "volume": "61",
            "issn": "",
            "pages": "5678--5682",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Spread of epidemic disease on networks",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "E J"
                    ],
                    "last": "Newman",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "Phys. Rev. E",
            "volume": "66",
            "issn": "1",
            "pages": "16--128",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "A tutorial introduction to Bayesian inference for stochastic epidemic models using Markov chain Monte Carlo methods",
            "authors": [
                {
                    "first": "P",
                    "middle": [
                        "D"
                    ],
                    "last": "Oneill",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "Mathematical Biosciences",
            "volume": "180",
            "issn": "1-2",
            "pages": "103--114",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "The effect of network topology on the spread of epidemics",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Ganesh",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Massouli",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Towsley",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "Proc. IEEE INFOCOM 2005",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Rumors in a network: Who's the culprit?",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Shah",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Zaman",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "IEEE Trans. Inf. Theory",
            "volume": "57",
            "issn": "8",
            "pages": "5163--5181",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "The Mathematical Theory of Infectious Diseases and its Applications",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "Bailey",
                    "suffix": ""
                }
            ],
            "year": 1975,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Some discrete-time SI, SIR, and SIS epidemic models",
            "authors": [
                {
                    "first": "L",
                    "middle": [
                        "J"
                    ],
                    "last": "Allen",
                    "suffix": ""
                }
            ],
            "year": 1994,
            "venue": "Mathematical Biosciences",
            "volume": "124",
            "issn": "1",
            "pages": "83--105",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Velocity and hierarchical spread of epidemic outbreaks in scale-free networks",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Barthelemy",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Barrat",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Pastor-Satorras",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Vespignani",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "Physical Review Letters",
            "volume": "92",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Epidemic spread in weighted scale-free networks",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Yan",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [
                        "Q"
                    ],
                    "last": "Fu",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "H"
                    ],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "Chinese Physics Letters",
            "volume": "22",
            "issn": "2",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Maximal planar networks with large clustering coefficient and power-law degree distribution",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Yan",
                    "suffix": ""
                },
                {
                    "first": "B.-H",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "Phys. Rev. E",
            "volume": "71",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Behaviors of susceptible-infected epidemics on scale-free networks with identical infectivity",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "J.-G",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "W.-J",
                    "middle": [],
                    "last": "Bai",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "B.-H",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "Phys. Rev. E",
            "volume": "74",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "An epidemic model with adaptive virus spread control for wireless sensor networks",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Tang",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "International Journal of Security and Networks",
            "volume": "6",
            "issn": "4",
            "pages": "201--210",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Distributed sequential Bayesian estimation of a diffusive source in wireless sensor networks",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Nehorai",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "IEEE Trans. Signal Process",
            "volume": "55",
            "issn": "4",
            "pages": "1511--1524",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Detection and localization of material releases with sparse sensor configurations",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "B"
                    ],
                    "last": "Fox",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "W"
                    ],
                    "last": "Fisher",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "S"
                    ],
                    "last": "Willsky",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "IEEE Trans. Signal Process",
            "volume": "55",
            "issn": "5",
            "pages": "1886--1898",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Bayesian detection in bounded height tree networks",
            "authors": [
                {
                    "first": "W",
                    "middle": [
                        "P"
                    ],
                    "last": "Tay",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "N"
                    ],
                    "last": "Tsitsiklis",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "Z"
                    ],
                    "last": "Win",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "IEEE Trans. Signal Process",
            "volume": "57",
            "issn": "10",
            "pages": "4042--4051",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "On the impact of node failures and unreliable communications in dense sensor networks",
            "authors": [],
            "year": 2008,
            "venue": "IEEE Trans. Signal Process",
            "volume": "56",
            "issn": "6",
            "pages": "2535--2546",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Performance of statistical tests for single-source detection using random matrix theory",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Bianchi",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Debbah",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Maida",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Najim",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "IEEE Trans. Inf. Theory",
            "volume": "57",
            "issn": "4",
            "pages": "2400--2419",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Robust distributed detection, localization and estimation of a diffusive target in clustered wireless sensor networks",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Aldalahmeh",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ghogho",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Proc. IEEE International Conference on Acoustics, Speech and Signal Processing",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Maximizing the spread of influence through a social network",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Kempe",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Kleinberg",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Tardos",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Proc. 9th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining",
            "volume": "",
            "issn": "",
            "pages": "137--146",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Extracting influential nodes on a social network for information diffusion",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Kimura",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Saito",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Nakano",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Motoda",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "Data Min. Knowl. Discov",
            "volume": "20",
            "issn": "",
            "pages": "70--97",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Counting linear extensions is #P-complete",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Brightwell",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Winkler",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "Proc. 23rd Annual ACM Symposium on Theory of Computing",
            "volume": "",
            "issn": "",
            "pages": "175--181",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "Federal Energy Regulatory Commission and North American Electric Reliability Corporation",
            "authors": [],
            "year": 2011,
            "venue": "Causes and Recommendations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "The centrality index of a graph",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Sabidussi",
                    "suffix": ""
                }
            ],
            "year": 1966,
            "venue": "Psychometrika",
            "volume": "31",
            "issn": "4",
            "pages": "581--603",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "Collective dynamics of 'small-world' networks",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "J"
                    ],
                    "last": "Watts",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "H"
                    ],
                    "last": "Strogatz",
                    "suffix": ""
                }
            ],
            "year": 1998,
            "venue": "Nature",
            "volume": "393",
            "issn": "6684",
            "pages": "440--442",
            "other_ids": {}
        },
        "BIBREF33": {
            "ref_id": "b33",
            "title": "Robust consensus tracking for an integrator-type multi-agent system with disturbances and unmodelled dynamics",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Hu",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "International Journal of Control",
            "volume": "84",
            "issn": "1",
            "pages": "1--8",
            "other_ids": {}
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "Robust consensus tracking of a class of second-order multi-agent dynamic systems",
            "authors": [],
            "year": 2012,
            "venue": "Systems and Control Letters",
            "volume": "61",
            "issn": "1",
            "pages": "134--142",
            "other_ids": {}
        },
        "BIBREF35": {
            "ref_id": "b35",
            "title": "Designing an inter-cloud messaging protocol for content distribution as a service (CoDaas) over future internet",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Wen",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Shi",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "International Conference on Future Internet Technologies",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "(i) For the case of a tree network, and when it is known that there are two infection sources, we derive an estimator for the infection sources based on the infection sequences count. The estimator can be calculated in O(n 2 ) time complexity, where n is the number of infected nodes. (ii) When there are at most two infection sources that are at least two hops apart, we derive an estimator for the class of geometric trees based on approximations of the estimator in (i), and we show that our estimator correctly estimates the number of infection sources and correctly identifies the source nodes, with probability going to one as the number of infected nodes increases. (iii) We derive an estimator for the infection regions of every infection source under a simplifying technical condition.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Example of an infection sequence. The shaded nodes are the infected nodes which form the infection graph Gn. Infection sources are S = {s1, s2}. The sequence (u2, u4) is an infection sequence, but (u4, u2) is not. The probability of the infection sequence \u03c3 = (u2, u4) is then given by P (\u03c3 | S) obtained by observing that when only s1 and s2 are infected, there are four edges (s1, u2), (s1, u3), (s2, u2), and (s2, u5) for the infection to spread. The infection is equally likely to spread along any of these four edges, out of which two results in the infection of node u2. After u2 is infected, there are 4 edges over which the infection can spread and this corresponds to the fraction 1 4 .",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "of the shortest path between u and v NG(u) set of neighbors of u in G deg G (u) number of neighbors of node u in G Gn infection graph with n infected nodes S * infection sources A * n infection partition of an infection graph Gn An,i infection region of an infection source si \u2126(Gn, S) set of infection sequences for an infection graph Gn and source set S C(S | Gn) = |\u2126(Gn, S)| Symbol Definition (defined implicitly w.r.t. Gn) \u03c1(u, v) path between u and v in the infection graph Gn Tv(S) tree in Gn, rooted at v w.r.t. source set S TM (S) = \u222av\u2208M Tv(S), where M is a subset of nodes",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "s2) total number of nodes in the i biggest trees in {Tu(s1, s2) : u \u2208 \u03c1(s1, s2)} Theorem 1. Suppose that G is a tree with infection sources S, and H n is the subgraph of G n consisting of all paths between any pair of nodes in S. If any two paths in H n do not intersect except possibly at nodes in S, then the optimal estimator\u00c2 n (S) for the infection partition is a Voronoi partition of the graph G n , where the centers of the partitions are the infection sources S.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "(u 1 , u 1 ; s 1 , s 2 ) = |T u1 (s 1 , s 2 )| \u22121 and |T u1 (s 1 , s 2 )|.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Addition of virtual nodes x1 and x2.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "Suppose that G is a geometric tree with two infection sources S * = {s 1 , s 2 }. Let \u03b1, b and c be fixed positive constants satisfying (11) for the geometric tree G. Let t be the time from the start of the infection process to our observation time. For any \u01eb \u2208 (0, 1), let E t be the event that all nodes within distance t(1 \u2212 t \u22121/2+\u01eb ) of either source nodes are infected, and no nodes greater than distance t(1 + t \u22121/2+\u01eb ) of either source nodes are infected. Then, there exists t 0 such that for all",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "iii) The above two steps are repeated until no two pairs of regions in the Voronoi partition can be combined. The formal algorithm is given as the Multiple Sources Estimation and Partitioning (MSEP) algorithm in Algorithm 4. To compute the complexity of the MSEP algorithm, we note that since the IP algorithm is based on the SSE algorithm, it has complexity O(n). For each value of k = 1, . . . , k max in the MSEP algorithm, there are O(k 2 ) pairs of neighboring regions in the infection partition. For each pair of region, the TSE algorithm makes O(n 2 )computations. Summing over all k = 1, . . . , k max , the time complexity of the MSEP algorithm can be shown to be",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "return (S (l) , A (l) ) O(k 3 max n 2 ). On the other hand, to compute C(S | G n ) for |S * | = k max would require O(n kmax ) computations.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF10": {
            "text": "where the two BFS trees are connected by randomly selecting an edge Algorithm 4 Multiple Sources Estimation and Partitioning (MSEP) 1: Inputs: G n and k max . 2: Initialization: 3: k := k max and choose S := {s 1 , . . . , s k } randomly in G n .",
            "latex": null,
            "type": "figure"
        },
        "FIGREF11": {
            "text": "Estimating the number of infection source nodes.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF12": {
            "text": "For each type of network and each number of infection sources, we perform 1000 simulation runs with 500 infected nodes. We randomly choose infection sources satisfying Assumption 2 and obtain the infection graph by simulating the infection spreading process using the SIR model. Finally, the MSEP or MSEP-BFS algorithm for tree networks and small-world networks respectively, is applied to the infection graph to estimate the number and locations of the infection sources. The estimation results for the number of infection sources |\u015c| in different scenarios are shown in",
            "latex": null,
            "type": "figure"
        },
        "FIGREF13": {
            "text": "|S * | = 2, MSEP-BFS |S * | = 2, nSSE |S * | = 3, MSEP-BFS |S * | = 3, nSSE (c) Small-world networks.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF14": {
            "text": "|S * | = 2, MSEP-BFS |S * | = 2, nSSE |S * | = 3, MSEP-BFS |S * | = 3, nSSE (d) US power grid network.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF15": {
            "text": "Histogram of the average error distances for various networks. We assume \u03b7 = 0 and that the nSSE algorithm has prior knowledge of the number of infection sources.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF16": {
            "text": "Illustration of a cluster of the SARS infection network with a single source. cascading outage starts with the loss of a single transmission line. However, as indicated in [31], this transmission line alone would not cause a cascading outage. After the loss of this transmission line, instantaneous power flow redistributions led to large voltage deviations, resulting in the nuclear units at San Onofre Nuclear Generating Station being taken off the power grid. The failures of these two key facilities together serve as the main causes of the subsequent cascading outages, so these two facilities are considered as the two infection sources. The main affected power network containing 48 facilities is shown in",
            "latex": null,
            "type": "figure"
        },
        "FIGREF17": {
            "text": "Illustration of the main affected power network with two infection sources.VI. CONCLUSIONWe have derived estimators for the infection sources and regions when the number of infection sources is bounded but unknown a priori. The estimators are based only on knowledge of the infected nodes and their underlying network connections. We provide an approximation for the infection source estimator for the class of geometric trees, and when there are at most two sources in the network. We show that this estimator asymptotically correctly identifies the infection sources when the number of infected nodes grows large. We also propose an algorithm that estimates the number of source nodes, and identify them and their respective infection regions for general infection graphs. Simulation results on geometric trees, regular trees, small-world networks, the US power grid network, and experimental results on the SARS infection network and cascading power outages show that our proposed estimation procedure performs well in general, with an average error distance of less than 4. The estimation accuracy of the number of source nodes is over 65% in all the networks we consider, with the geometric tree networks having an accuracy of over 90%. Furthermore, the minimum infection region covering percentage is more than 59% for all networks. Our estimation procedure assumes only knowledge of the underlying network connections. In practical applications where more information about the infection process is available, a more accurate and intelligent guess of the number of infection sources can be made.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF18": {
            "text": "content cache management. These are all areas of future research. that are infected by source s i be colored with color i, with i = 1, . . . , k. Then a partition A n corresponds to a coloring of the graph H n , and to quantify the probability of a partition, it is sufficient to consider only infection sequences in the graph H n . We have P (A n | S, G n ) = \u03c3\u2208\u2126(Hn,S,An)",
            "latex": null,
            "type": "figure"
        },
        "FIGREF19": {
            "text": "Choose two sources s i and s j and let m be the number of nodes in the path \u03c1(s i , s j ) connecting s i and s j , excluding the source nodes. Suppose that r > \u2308m/2\u2309 nodes in this path have color i. Construct a new coloring A \u2032 n so that \u2308m/2\u2309 nodes in \u03c1(s i , s j ) closest to s i have color i and the rest have color j. The rest of the nodes in A \u2032 n have the same colors as that in A n . Each infection sequence \u03c3 \u2208 \u2126(H n , S, A n ) corresponds to an infection sequence \u03c3 \u2032 \u2208 \u2126(H n , S, A \u2032 n ), where the last x = r \u2212 \u2308m/2\u2309 color-i nodes in \u03c3 become the last x color-j nodes in \u03c3 \u2032 . From (22), we have p l (\u03c3 | H n , S) = p l (\u03c3 \u2032 | H n , S) for all l. Since m \u2308m/2\u2309 \u2265 m r , we have |\u2126(H n , S, A \u2032 n )| \u2265 |\u2126(H n , S, A n )|, therefore (20) yields P (A \u2032 n | S, G n ) \u2265 P (A n | S, G n ). The same argument can be repeated a finite number of times for all paths in H n connecting infection sources.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF20": {
            "text": "{s 1 , s 2 }.The number of infection sequences can be found by counting the number of ways to form such a sequence.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF21": {
            "text": "(i) I * i (u m , v l ) \u2265 (\u03c8 \u2212 2)N min (t) + 2 \u2265 (d min \u2212 2)N min (t) for i = 1, . . . , d(u m , v l ) + 1, (ii) I * i (s 1 , s 2 ) \u2264 \u03c8N max (t) + 2 \u2264 2d max N max (t) + 2 for all i = 1, . . . , d(s 1 , s 2 ) + 1, Illustration of the case where u0 = v0 = w0. A typical network for a single source tree.(iii) |T wi (u m , v l )| \u2265 (\u03c8 \u2212 2)N min (t) + 2 \u2265 (d min \u2212 2)N min (t) for all i = 1, . . . , k \u2212 1, (iv) |T w (u m , v l )| \u2265 (d min \u2212 1)N min (t) + 1 for all w \u2208 \u03c1(s 1 , s 2 ), (v) |T wi (s 1 , s 2 )| \u2264 N max (t) for all i = 1, . . . , k \u2212 1, and (vi) |T w (s 1 , s 2 )| \u2264 N max (t) for all w \u2208 \u03c1(u m , v l ).The above bounds yieldC(s 1 , s 2 | G n ) C(u m , v l | G n ) = Q(s 1 , s 2 ) Q(u m , v l ) w\u2208Gn\\\u03c1(um,vl) |T w (u m , v l )| w\u2208Gn\\\u03c1(s1,s2) |T w (s 1 , s wi (u m , v l )| w\u2208\u03c1(s1,s2) |T w (u m , v l )| k\u22121 i=1 |T wi (s 1 , s 2 )| w\u2208\u03c1(um,vl) |T w (s 1 , s wi (u m , v l )| |T wi (s 1 , s 2 )| \u00b7 (2(1 + \u03b4)) \u2212d(um,vl)\u22121 d(um,vl)+1 i=1 I * i (u m , v l ) w\u2208\u03c1(um,vl) |T w (s 1 , s 2 )| \u00b7 (2(1 + \u03b4)) d(s1,s2)+1 w\u2208\u03c1(s1,s2) |T w (u m , v l )| d(s1,s2)+1 i=1 I * i (s 1 , s 2 ) \u2265 (d min \u2212 2)N min (t) N max (t) k\u22121 (d min \u2212 2)N min (t)2(1 + \u03b4)N max (t) d(um,vl)+1 (1 + \u03b4)((d min \u2212 1)N min (t) + 1)",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "SUMMARY OF NOTATIONS USED.",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "holding for all nodes u that are neighbors of s. Suppose that s has degree deg G (s) \u2208 [d min , d max ], where d min and d max are positive constants satisfying(18). Then, for any \u03b4 in the interval(19), the geometric tree TSE algorithm estimates as sources s and one of its neighbors with probability (conditioned on s being the infection source) going to 1 as t \u2192 \u221e.Theorem 3 implies that when there exists only one source, the geometric tree TSE algorithm finds two neighboring nodes, one of which is the true source. From Theorem 2 and Assumption 2, if there are two sources, our algorithm identifies the two source nodes, which are at least two hops from each other, with high probability. Therefore, by checking the distance between the two nodes identified by the geometric tree TSE algorithm, we can estimate the number of source nodes in the infection graph. This observation together with Theorem 1 suggest the following heuristic.",
            "latex": null,
            "type": "table"
        },
        "TABREF2": {
            "text": "COMPARIONS.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}