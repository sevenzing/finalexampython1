{
    "paper_id": "d88383cf801f9c57ee80b969eb527d2da5d1eac3",
    "metadata": {
        "title": "Assessing Centrality Without Knowing Connections",
        "authors": [
            {
                "first": "Leyla",
                "middle": [],
                "last": "Roohi",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "The University of Melbourne",
                    "location": {
                        "settlement": "Parkville",
                        "region": "VIC",
                        "country": "Australia"
                    }
                },
                "email": "leyla.roohi@unimelb.edu.au"
            },
            {
                "first": "Benjamin",
                "middle": [
                    "I P"
                ],
                "last": "Rubinstein",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "The University of Melbourne",
                    "location": {
                        "settlement": "Parkville",
                        "region": "VIC",
                        "country": "Australia"
                    }
                },
                "email": "benjamin.rubinstein@unimelb.edu.au"
            },
            {
                "first": "Vanessa",
                "middle": [],
                "last": "Teague",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "The University of Melbourne",
                    "location": {
                        "settlement": "Parkville",
                        "region": "VIC",
                        "country": "Australia"
                    }
                },
                "email": "vjteague@unimelb.edu.au"
            }
        ]
    },
    "abstract": [
        {
            "text": "We consider the privacy-preserving computation of node influence in distributed social networks, as measured by egocentric betweenness centrality (EBC). Motivated by modern communication networks spanning multiple providers, we show for the first time how multiple mutually-distrusting parties can successfully compute node EBC while revealing only differentially-private information about their internal network connections. A theoretical utility analysis upper bounds a primary source of private EBC error-private release of ego networkswith high probability. Empirical results demonstrate practical applicability with a low 1.07 relative error achievable at strong privacy budget = 0.1 on a Facebook graph, and insignificant performance degradation as the number of network provider parties grows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "The online version of this chapter (https://",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "This paper concerns the measurement of node importance in communication networks with egocentric betweenness centrality (EBC) [7] , representing how much a node's neighbours depend on the node for inter-connection. EBC has emerged as a popular centrality measure that is used widely in practice [12] .",
            "cite_spans": [
                {
                    "start": 126,
                    "end": 129,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 295,
                    "end": 299,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "EBC computation has many applications. In conjunction with methods for identifying fake news [11, 15] , EBC can be used to limit its propagation by targeting interventions at those individuals who are most critical in spreading information. EBC computation is straightforward when all communication network information is available to one trusted party. However in reality modern telecommunications involve competing network providers, even within the one country. While many people communicate between countries with completely different networks, where no central authority that can view all their connections. While recent work [18] considered the case of two mutually-distrusting networks, multiple networks are essential for understanding one person's communication and presents non-trivial technical challenges.",
            "cite_spans": [
                {
                    "start": 93,
                    "end": 97,
                    "text": "[11,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 98,
                    "end": 101,
                    "text": "15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 631,
                    "end": 635,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Here we present a protocol that preserves the privacy of the internal connections of each of arbitrarily-many networks while they collaborate on the computation of EBC. By carefully structuring information flow, we achieve highly accurate results and strong privacy protection. We produce a private output that can be safely published. We assume the complete list of nodes (i.e., people) is public, while individual connections are private. Each service provider knows the connections within its own network, plus the connections between one of its members and the outside (e.g., from when they contact someone in a different network). Connections internal to other networks are unknown. We prove that our protocol preserves edge differential privacy [8] in which the existence or non-existence of an edge must be protected. We present: datasets. This demonstrates applicability of our algorithm with modest 1.07 relative error at strong = 0.1 DP, practical runtimes, and insignificant degradation with increasingly many parties.",
            "cite_spans": [
                {
                    "start": 751,
                    "end": 754,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Near-constant accuracy with increasing numbers of parties is both surprising and significant, as is our innovation over past work [18] by preventing leakage at final EBC release. Our protocol is substantially more efficient than a na\u00efve extension of two-party techniques, which would require total communication of O(|V | 2 |A| 2 ) where V is the set of vertices and A the parties. We achieve total communication of O((|A| + |V |)|A||V |). All participants are equal-there is no centralisation; and all parties are protected by edge DP. While we reuse the [18] subset release two-stage sampler, we offer new analysis. We prove in Proposition 1 that it can be distributed without privacy/accuracy loss, and establish a new high-probability utility bound on EBC based on this mechanism's release (Theorem 2).",
            "cite_spans": [
                {
                    "start": 130,
                    "end": 134,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 556,
                    "end": 560,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In most prior work on differentially-private graph processing, the computation is performed by a trusted authority with complete knowledge of the whole network. Only the output, not the intermediate computations, must preserve privacy [1, 3, [8] [9] [10] 16, 17, 19, 20] . There is considerable work on distributed differential privacy [2, 4, 14] , where queries are distributed or decomposed into sub-queries. However there is far less work in our distributed privacy model, in which even the intermediate communication should preserve differential privacy. This privacy model is mostly related to distributed graphs where parties seek joint computation of statistics of the graph. The most closely related work is [18] , which derives an edge-DP algorithm for EBC, but only for two networks. The algorithm allows two mutually-distrusting parties to jointly compute the EBC privately using the exponential and Laplace mechanisms to maintain differentially-private intermediate computations and communications. However their work assumes the first party acts as a centraliser that does not share the final result. It is thus not directly applicable to our setting.",
            "cite_spans": [
                {
                    "start": 235,
                    "end": 238,
                    "text": "[1,",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 239,
                    "end": 241,
                    "text": "3,",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 242,
                    "end": 245,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 246,
                    "end": 249,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 250,
                    "end": 254,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 255,
                    "end": 258,
                    "text": "16,",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 259,
                    "end": 262,
                    "text": "17,",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 263,
                    "end": 266,
                    "text": "19,",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 267,
                    "end": 270,
                    "text": "20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 336,
                    "end": 339,
                    "text": "[2,",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 340,
                    "end": 342,
                    "text": "4,",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 343,
                    "end": 346,
                    "text": "14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 716,
                    "end": 720,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "Proposed by [6] as a way of measuring a node's importance by looking only at its ego network, the set of nodes directly connected to it. To compute the EBC of node a, we count, for each pair of a-neighbouring nodes (i, j), what fraction of shortest paths between them pass through a. Since we consider only paths within a's ego network, only paths of length two are relevant. We count zero for any pair (i, j) that is directly connected, because these two nodes do not rely on a at all.",
            "cite_spans": [
                {
                    "start": 12,
                    "end": 15,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Egocentric Betweenness Centrality"
        },
        {
            "text": "where N a = {v \u2208 V | {v, a} \u2208 E} denotes the neighbourhood or ego network of a, A denotes the (|N a |+1)\u00d7(|N a |+1) adjacency matrix induced by N a \u222a{a} with A ij = 1 if {i, j} \u2208 E and 0 otherwise; A 2 ij denotes the ij-th entry of the matrix square, guaranteed positive for all i, j \u2208 N a since all such nodes are connected through a.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 1 ([6]). Egocentric betweenness centrality of node a in simple undirected graph (V, E) is defined as"
        },
        {
            "text": "We wish to protect the privacy of connections in networks, which are the edges in the network graph. Differential privacy (DP) [5] limits the differences in an algorithm's output distribution on neighbouring databases, thus quantifying the information leakage about the presence or absence of a particular record. We use edge privacy [8] , because we wish to control the attacker's ability to make inferences about the presence of individual edges. As graphs on identical node sets, two databases are neighbours if they differ by exactly one edge.",
            "cite_spans": [
                {
                    "start": 127,
                    "end": 130,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 334,
                    "end": 337,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "Differential Privacy on Graphs"
        },
        {
            "text": "Our databases are simply adjacency matrices in which an element A ij is 1 if there is an edge from i to j and zero otherwise. Equivalently, these can be considered as sequences of bits: elements of {0, 1} n (where n is the number of nodes in the network choose two). Formally, two databases D, D \u2208 {0, 1} n are termed neighbouring (denoted D \u223c D ) if there exists exactly one i \u2208 [n] such that D i = D i and D j = D j for all j \u2208 [n]\\{i}. In other words, D \u2212 D 1 = 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Differential Privacy on Graphs"
        },
        {
            "text": "A is said to preserve -differential privacy if for any two neighbouring databases D, D , and for any measurable set R \u2286 Range(A),",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 2. For > 0, a randomised algorithm on databases or mechanism"
        },
        {
            "text": "In this paper, we employ several generic mechanisms from the differential privacy literature including Laplace [5] for releasing numeric vectors, and the exponential [13] for private optimisation. We also use a recent subset release mechanism [18] which leverages the exponential mechanism, and develop its theoretical utility analysis.",
            "cite_spans": [
                {
                    "start": 111,
                    "end": 114,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 166,
                    "end": 170,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 243,
                    "end": 247,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Definition 2. For > 0, a randomised algorithm on databases or mechanism"
        },
        {
            "text": "Consider a publicly-known set V and a privacy-sensitive subset R \u2286 V . The exponential mechanism run with quality function q(R , R) = |R \u2229 R | + |R \u222a R | and \u0394q = 1 preserves -DP. Algorithm 1 (see Supplemental Materials) implements this mechanism, running in O(|V |) space and time.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1 ([18])."
        },
        {
            "text": "We have |A| participating parties A = {\u03b1 1 , . . . , \u03b1 |A| }, each representing a telecommunications service provider. They control a global communication graph (V, E) whose nodes are partitioned into |A| (disjoint) sets one per service provider s.t. V \u03b1 contains the nodes of party \u03b1. Every customer is represented as a node that belongs to one and only one service provider; pairs of customers who have had some communication (e.g., a phone call, SMS or email) are edges.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Statement"
        },
        {
            "text": "We will often equivalently represent edge sets as adjacency matrices (or flattened vectors) with elements in {0, 1}.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Statement"
        },
        {
            "text": "We write E \u03b1,\u03b1 for the set of edges in (V, E) between nodes in V \u03b1 -these are communications that happened entirely within \u03b1. Similarly, E \u03b1,\u03b2 are the edges with one node in V \u03b1 and the other in V \u03b2 -these represent communications between two service providers. Set E = \u03b1,\u03b2\u2208A E \u03b1,\u03b2 is the disjoint union of all such edge sets.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Statement"
        },
        {
            "text": "We assume that all nodes are known to all parties, but that each party learns only about the edges that are incident to a node in its network, including edges within its network.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Statement"
        },
        {
            "text": "We wish to enable all parties to learn and publicly release the EBC of any chosen node a, while maintaining edge privacy between all parties. Without loss of generality we assume a \u2208 V \u03b11 . We also denote by V \u2212 = V \\{a}. Before detailing a protocol for accomplishing this task, we must be precise about a privacy model.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Statement"
        },
        {
            "text": "Consider a simple undirected graph ( \u03b1\u2208A V \u03b1 , \u03b1,\u03b2\u2208A E \u03b1,\u03b2 ) partitioned by parties A = {\u03b1 1 , . . . , \u03b1 |A| } as above, and an arbitrary node a \u2208 V \u03b11 . The problem of private multi-party egocentric betweenness centrality is for the parties \u03b1 to collaboratively approximate EBC(a) under assumptions that: A1. All parties \u03b1 \u2208 A know the entire node set \u03b1\u2208A V \u03b1 ; A2. Each party \u03b1 \u2208 A knows every edge incident to nodes within its own network, i.e. \u03b2\u2208A E \u03b1,\u03b2 . A3. The computed approximate EBC(a) needs to be available to all of parties.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem 1 (Private Multi-Party EBC)."
        },
        {
            "text": "The intermediate computation must protect -differential edge privacy of each party from the others. We seek solutions under a fully adversarial privacy model: irrespective of whether other parties follow the protocol, the releases by party \u03b1 protect its edge differential privacy. (Of course a cheating participant can always release information about edges it already knows, which may join another network.) Furthermore, the output must protect -differential privacy of the edges. In [18] the final EBC could be revealed only to the party who made the query. In this paper, the final EBC is -differentially private and can be released safely to anyone.",
            "cite_spans": [
                {
                    "start": 485,
                    "end": 489,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Problem 1 (Private Multi-Party EBC)."
        },
        {
            "text": "We describe three algorithms: SubsetRelease, PrivatePathCount, and PrivateReciprocateandSum, which are privacy-preserving versions of Steps i-iii of Protocol 1 (see Supplemental Materials). These then combine to produce PrivateEBC, a differentially-private version of the whole protocol.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Multi-party Private EBC"
        },
        {
            "text": "Each party \u03b1 runs SubsetRelease, Algorithm 1 (see Supplemental Material) with its share R \u03b1 of a's ego network. It broadcasts the output R \u03b1 -the approximation of R \u03b1 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Private Ego Network Broadcast"
        },
        {
            "text": "SubsetRelease uses the exponential mechanism to privately optimise a particular quality function (Lemma 1) that encourages a large intersection between R \u03b1 and release R \u03b1 , along with a minimal symmetric set difference. As each party runs this mechanism relative to its own node set, it operates its own quality function defined relative to R \u03b1 (see Proposition 1 for the formal definition). We observe a convenient property of the quality functions run by each party: they sum up to the overall quality function if the ego party was to run Subse-tRelease in totality. This permits proof (in the Supplemental Materials) that this simple distributed protocol for private ego network approximation exactly implements a centralised approximation. There is no loss to privacy or accuracy due to decentralisation. Proposition 1. Consider parties \u03b1 \u2208 A running SubsetRelease with identical budgets 1 > 0 and quality functions q",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Private Ego Network Broadcast"
        },
        {
            "text": "Then R = \u222a \u03b1\u2208A R \u03b1 is distributed as SubsetRelease run with , quality function q(\u00b7), on the combined R in V . Consequently the individual R \u03b1 and the combined R, each preserve 1 -DP simultaneously.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Private Ego Network Broadcast"
        },
        {
            "text": "Input: ego node a \u2208 V\u03b1 1 (remember, by assumption, \u03b11 contains a); execution party \u03b1 \u2208 A; true node set R \u03b1 ; for each \u03b2 \u2208 A, edge set E \u03b1,\u03b2 and private node set R \u03b2 ;",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1. PrivatePathCount"
        },
        {
            "text": "2, \u03942 > 0 Ensure: A vector of noisy counts, indexed by endpoints {i, j} with i < j, of the total number of nodes k in R \u03b1 that are connected to both i and j.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1. PrivatePathCount"
        },
        {
            "text": "for j \u2208 RA with i < j do 7:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1. PrivatePathCount"
        },
        {
            "text": "end for 10: end for 11: return T\u03b1",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1. PrivatePathCount"
        },
        {
            "text": "Each party \u03b1 runs Algorithm 1, using the R \u03b2 's received from each other party in the previous step. Party \u03b1 counts all the 2-paths where the intermediate node is in R \u03b1 . For each node pair (i, j) with i < j, \u03b1 will send the 2-path count T i,j \u03b1 to the party that contains node i, just like the non-private version of the protocol. But first, in order to privatise this vector of counts, Laplace noise is added to the two-path counts according to the sensitivity in the following lemma proved in the Supplemental Materials, thereby preserving 2 -DP in this stage's release.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Private Path Count"
        },
        {
            "text": "\u0394f = 2|R A |.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 2. Let query f denote the vector-valued non-private response T \u03b1 of party \u03b1 in Algorithm 1. The L 1 -global sensitivity of f is upper-bounded by"
        },
        {
            "text": "Every party \u03b1 receives noisy counts from PrivatePathCount and for any pairs i < j where i \u2208 R \u03b1 and j \u2208 \u03b2>\u03b1 R \u03b2 \u222a R \u03b1 , that are believed by \u03b1 to be disconnected, \u03b1 increments the received T i,j by the number of incident 2-paths. Each party then reciprocates the summation of the counts. In this algorithm, each party may replace noisy R \u03b1 with true R \u03b1 . This optimises utility at no cost to privacy: counts T ij for i, j \u2208 R \u03b1 \\R \u03b1 are discarded. This is safe to do, since the Laplace mechanism already accounts for changes in R \u03b1 . The Laplace noise is utilised to privatise the reciprocated sum S \u03b1 to 3 -DP, calibrated by sensitivity as bounded next, with proof relegated to the Supplemental Materials. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Private Reciprocate and Sum"
        },
        {
            "text": "Input: ego node a \u2208 V\u03b1 1 ; execution party \u03b1 \u2208 A; for each \u03b1 \u2264 \u03b2 \u2208 A, edge set E \u03b1,\u03b2 and private node set R \u03b2 ; for each \u03b2 \u2208 A, noisy counts T \u03b2 ; 3, \u03943 > 0 1:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 2. PrivateReciprocateandSum"
        },
        {
            "text": "for j \u2208 R with i < j do 6:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 2. PrivateReciprocateandSum"
        },
        {
            "text": "if {i, j} / \u2208 E\u03b1 then 7:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 2. PrivateReciprocateandSum"
        },
        {
            "text": "T \u2190\u2212 \u03b3\u2208A T ij ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 2. PrivateReciprocateandSum"
        },
        {
            "text": "After the parties have run the protocol phases, namely SubsetRelease, Pri-vatePathCount and PrivateReciprocateandSum, they must finally complete the computation of the private EBC. Algorithm 3 depicts PrivateEBC orchestrating the high-level protocol thus far, and then adding the received S \u03b1 to compute final EBC. Theorem 1. PrivateEBC preserves ( 1 + 2 + 3 )-DP for each party. Remark 1. While we have used uniform privacy budgets across parties, our analysis immediately extends to custom party budgets.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "PrivateEBC: Putting it All Together"
        },
        {
            "text": "In this section we develop a utility analysis of privacy-preserving betweenness centrality, noting that no previous theoretical analysis has been performed including in the two-party case [18] . Our analysis focuses on a utility bound",
            "cite_spans": [
                {
                    "start": 188,
                    "end": 192,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Utility Bound"
        },
        {
            "text": "Input: (Public) ego node a \u2208 V\u03b1 1 ; ordered set of parties A; node sets V\u03b1 for \u03b1 \u2208 A; parameter vectors , \u0394 0. Input: (Private) for each \u03b1, \u03b2 \u2208 A, edges E \u03b1,\u03b2 , nodes R \u03b1 ; 1: for \u03b1 \u2208 A in parallel do 2: Party \u03b1 does: 3:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "if \u03b1 = \u03b11 then 4: V = V\u03b1\\{a} 5:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "R\u03b1 \u2190 SubsetRelease(V, R \u03b1 , 1) 9:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "Broadcast R\u03b1 10:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "T\u03b1 \u2190 PrivatePathCount(\u03b1, E \u03b1\u03b2 , R \u03b2 , 2, \u03942) 11:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "for all i, j \u2208 V with i < j do 12:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "Send T i,j \u03b1 to the Party \u03b2 s.t. i \u2208 V \u03b2 13: end for 14:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "S\u03b1 \u2190 ReciprocateandSum(a, {E \u03b1,\u03b2 , R \u03b2 |\u03b2 > \u03b1}, 3) . {Party \u03b1 reciprocates and sums only paths with \u03b2 \u2265 \u03b1.} 15:",
            "cite_spans": [
                {
                    "start": 48,
                    "end": 50,
                    "text": "3)",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "Broadcast S\u03b1 16:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "pEBC(a) \u2190 \u03b1\u2208A S\u03b1 17:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "Return pEBC(a) 18: end for on EBC resulting from the subset release mechanism run to privatise the ego network. We abuse notation with q(R) = q(R , R) referring to the quality function of the SubsetRelease mechanism of Lemma 1 with dependence on the private R made implicit; likewise for the quality functions run by each party in the decentralised setting. The technical challenge is in leveraging the following well-known utility bound on the exponential mechanism, which only establishes high-probability near-optimal quality. Corollary 1. Consider parties \u03b1 \u2208 A each running SubsetRelease concurrently with budgets > 0 and quality functions q",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "Then the consequent high-probability quality bound of Lemma 4 (see Supplemental Materials) holds for random combined response R = \u222a \u03b1 R \u03b1 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "We prove the following high-probability utility bound in the supplemental materials.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "Theorem 2. Consider privacy budget > 0, true ego network R and t > |R | 2 /2. And suppose that each party \u03b1 \u2208 A runs SubsetRelease with budget , quality function",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "Then EBC 1 produced from R = \u222a \u03b1\u2208A R \u03b1 incurs error relative to non-private EBC run on non-private R , upper bounded as |EBC \u2212 EBC 1 | \u2264 t, with probability at least: ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 3. PrivateEBC"
        },
        {
            "text": "In order to validate the utility and privacy of PrivateEBC, we experimented with three different graphs on Facebook friendships with 63,731 nodes and 817,035 edges 1 , the Enron email network with 36,692 nodes and 183,831 edges 2 and Pretty Good Privacy (PGP) with 10,680 nodes and 24,316 edges (See footnote 1). We employ uniform random sampling in order to partition the graphs into multiple disjoint parties while keeping the structure of the graph intact. In addition to evaluations on three parties across datasets, we also validated utility across 2, 3, 5, 7 and 10 parties on the PGP data set. The experiments were run on a server with 2 \u00d7 28 core Xeon's (112 threads with hyper threading) and 1.5 TB RAM, using Python 3.7 without parallel computations. We employed the Mpmath arbitrary precision library for implementing inverse transform sampling (Algorithm 2 in the supplemental materials) and set the precision to 300 bits. We use relative error between true EBC and private EBC-the lower the relative error the higher the utility. Any errors around 1 or 2 are considered practical as they signify EBCs within the same order of magnitude. We ran the experiment 60 times for each chosen value by choosing the target ego nodes randomly and robustly aggregating the relative error by median. Throughout we set 1 = 2 = 3 = /3.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Setup"
        },
        {
            "text": "First, we demonstrate how PrivateEBC utility varies with increasing privacy budget from 0.1 to 7, for three parties across each of three different graph datasets. The median relative error between real and private EBC represents utility. Figure 1 (a) displays the results for Facebook, Enron and PGP data sets, where median relative error decreases significantly when is increased to a strong guarantee of 1, and remains small for larger . For strong privacy guarantee of = 0.5, median relative error is usually \u2248 1 for all three data sets. These results demonstrate that PrivateEBC achieves practical utility across a range of graph sizes and privacy levels. Next we report utility at privacy = 1 for the number parties ranging over 2, 3, 5, 7 and 10. Every point in Figure 1 (b) shows the median relative error between private and real EBC across 120 randomly chosen nodes in the PGP data set. Our results find insignificant degradation occurs to accuracy or privacy when growing the number of parties.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 238,
                    "end": 246,
                    "text": "Figure 1",
                    "ref_id": null
                },
                {
                    "start": 768,
                    "end": 776,
                    "text": "Figure 1",
                    "ref_id": null
                }
            ],
            "section": "Results"
        },
        {
            "text": "Remark 3. While more parties means more calls to ReciprocateandSum and PrivatePathCount such that the scale of the second and third mechanisms' Laplace noise increases moderately, the major source of error, SubsetRelease, is not affected by the number of parties as proved in Proposition 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "We report on timing analysis for PrivateEBC as a function of privacy. Median computation time of 60 random ego nodes for budget from 0.1 to 7 is reported in Figures 2(a) , 2(b) and 2(d), on Facebook, Enron and PGP data sets. Here total time overall decreases as privacy decreases (increasing ), while a small increase to runtime can be seen at very high levels of privacy (low but increasing ) for Enron it is likely due to different behaviours in the protocol with increasing . When the set difference of R and R is small, the two-stage sampler generates small numbers of nodes in faster time. However faster runtime with lower privacy dominates behaviour overall. Figures 2(d) , 2(e), 2(f) show how the median relative error is changing by ego node degree. We report results on privacy budget = 1, which do not show significant dependence: In Facebook the median relative error is almost constant for different node degrees and in Enron and PGP for node degrees up to 10 2 , deviations are approximately 1% and 0.5% of the maximum relative error respectively.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 157,
                    "end": 169,
                    "text": "Figures 2(a)",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 666,
                    "end": 678,
                    "text": "Figures 2(d)",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Results"
        },
        {
            "text": "This paper develops a new protocol for multi-party computation of egocentric betweeness centrality (EBC) under per-party edge differential privacy. We significantly improve on past work by extending to multiple parties, achieving very low communication complexity, theoretical utility analysis, the facility to release the private EBC to all parties. Experimental results demonstrate the practical accuracy and runtime of our protocol at strong levels of privacy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion and Future Work"
        },
        {
            "text": "For future work we hope to allocate differential privacy budgets per stage, by optimising utility bounds. We also intend to develop a network model that reflects a person's use of multiple media, so that the node set need not be disjointly partitioned, while the privacy of edges remains paramount.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion and Future Work"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Discovering frequent patterns in sensitive data",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Bhaskar",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Laxman",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Smith",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Thakurta",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "SIGKDD 2010",
            "volume": "",
            "issn": "",
            "pages": "503--512",
            "other_ids": {
                "DOI": [
                    "10.1145/1835804.1835869"
                ]
            }
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Towards statistical queries over distributed private user data",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Reznichenko",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Francis",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Gehrke",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "13--13",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Publishing graph degree distribution with node differential privacy",
            "authors": [
                {
                    "first": "W",
                    "middle": [
                        "Y"
                    ],
                    "last": "Day",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Lyu",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "SIGMOD 2016",
            "volume": "",
            "issn": "",
            "pages": "123--138",
            "other_ids": {
                "DOI": [
                    "10.1145/2882903.2926745"
                ]
            }
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Our data, ourselves: privacy via distributed noise generation",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Dwork",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Kenthapadi",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Mcsherry",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Mironov",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Naor",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "EURO-CRYPT 2006",
            "volume": "4004",
            "issn": "",
            "pages": "486--503",
            "other_ids": {
                "DOI": [
                    "10.1007/11761679_29"
                ]
            }
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Calibrating noise to sensitivity in private data analysis",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Dwork",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Mcsherry",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Nissim",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Smith",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "TCC 2006",
            "volume": "3876",
            "issn": "",
            "pages": "265--284",
            "other_ids": {
                "DOI": [
                    "10.1007/11681878_14"
                ]
            }
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Ego network betweenness",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Everett",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "P"
                    ],
                    "last": "Borgatti",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "SN",
            "volume": "27",
            "issn": "1",
            "pages": "31--38",
            "other_ids": {
                "DOI": [
                    "10.1016/j.socnet.2004.11.007"
                ]
            }
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Betweenness centrality correlation in social networks",
            "authors": [
                {
                    "first": "K",
                    "middle": [
                        "I"
                    ],
                    "last": "Goh",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Oh",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Kahng",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Kim",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Phys. Rev. E",
            "volume": "67",
            "issn": "1",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1103/physreve.67.017101"
                ]
            }
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Accurate estimation of the degree distribution of private networks",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Hay",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Miklau",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Jensen",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "ICDM",
            "volume": "",
            "issn": "",
            "pages": "169--178",
            "other_ids": {
                "DOI": [
                    "10.1109/icdm.2009.11"
                ]
            }
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Private analysis of graph structure",
            "authors": [
                {
                    "first": "V",
                    "middle": [],
                    "last": "Karwa",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Raskhodnikova",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Smith",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Yaroslavtsev",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "PVLDB",
            "volume": "4",
            "issn": "11",
            "pages": "1146--1157",
            "other_ids": {
                "DOI": [
                    "10.1145/2611523"
                ]
            }
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Analyzing graphs with node differential privacy",
            "authors": [
                {
                    "first": "S",
                    "middle": [
                        "P"
                    ],
                    "last": "Kasiviswanathan",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Nissim",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Raskhodnikova",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Smith",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "TCC 2013",
            "volume": "7785",
            "issn": "",
            "pages": "457--476",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-642-36594-2_26"
                ]
            }
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Prominent features of rumor propagation in online social media",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Kwon",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Cha",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Jung",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "2013 IEEE 13th ICDM",
            "volume": "",
            "issn": "",
            "pages": "1103--1108",
            "other_ids": {
                "DOI": [
                    "10.1109/icdm.2013.61"
                ]
            }
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Egocentric and sociocentric measures of network centrality",
            "authors": [
                {
                    "first": "P",
                    "middle": [
                        "V"
                    ],
                    "last": "Marsden",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "Soc. Netw",
            "volume": "24",
            "issn": "4",
            "pages": "407--422",
            "other_ids": {
                "DOI": [
                    "10.1016/s0378-8733(02)00016_3"
                ]
            }
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Mechanism design via differential privacy",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Mcsherry",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Talwar",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "FOCS 2007",
            "volume": "",
            "issn": "",
            "pages": "94--103",
            "other_ids": {
                "DOI": [
                    "10.1109/focs.2007.66"
                ]
            }
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Secure two-party differentially private data release for vertically partitioned data",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "Mohammed",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Alhadidi",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "C"
                    ],
                    "last": "Fung",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Debbabi",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "IEEE Trans. Dependable Secure Comput",
            "volume": "11",
            "issn": "1",
            "pages": "59--71",
            "other_ids": {
                "DOI": [
                    "10.1109/tdsc.2013.22"
                ]
            }
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Fake news detection on social media using geometric deep learning",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Monti",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Frasca",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Eynard",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Mannion",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "M"
                    ],
                    "last": "Bronstein",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1902.06673"
                ]
            }
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Privacy-integrated graph clustering through differential privacy",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "M\u00fclle",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Clifton",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "B\u00f6hm",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "EDBT/ICDT Workshops",
            "volume": "",
            "issn": "",
            "pages": "247--254",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Efficient Lipschitz extensions for high-dimensional graph statistics and node private degree distributions",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Raskhodnikova",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Smith",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1504.07912"
                ]
            }
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Differentially-private two-party egocentric betweenness centrality",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Roohi",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "I P"
                    ],
                    "last": "Rubinstein",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Teague",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "The 38th Annual IEEE International Conference on Computer Communications. INFOCOM",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1109/infocom.2019.8737405"
                ]
            }
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Mining frequent graph patterns with differential privacy",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Shen",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Yu",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "KDD 2013",
            "volume": "",
            "issn": "",
            "pages": "545--553",
            "other_ids": {
                "DOI": [
                    "10.1145/2487575.2487601"
                ]
            }
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Private release of graph statistics using ladder functions",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Cormode",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "M"
                    ],
                    "last": "Procopiuc",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Srivastava",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Xiao",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "SIGMOD 2015",
            "volume": "",
            "issn": "",
            "pages": "731--745",
            "other_ids": {
                "DOI": [
                    "10.1145/2723372.2737785"
                ]
            }
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Let query f denote the reciprocate and sum over 2-paths with intermediate point in \u03b2 R \u03b2 while the nodes i < j are not connected and i \u2208 R \u03b1 and",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "S\u03b1 \u2190\u2212 S\u03b1 + ( max{0, T } + 1) \u22121 9: end if 10: end for 11: end for 12: S\u03b1 \u2190\u2212 S\u03b1 + Lap(2\u03943/ 3) 13: return S\u03b1j \u2208 \u03b2<\u03b1 R \u03b2 \u222a R \u03b1 . Then the L 1 -global sensitivity of f is upper-bounded by \u0394f = ( max{0, T } + 1) \u22121 \u2264 1 irrespective of party.Communication Complexity. Ego Network Broadcast requires each party to send to each other party |V | bits of length 1 that shows the node is present or not, hence a total of O(|A| 2 |V |). Private Path Count sends, for each node i, up to |V | messages T i,j from each party to the owner of node i. The pathcounts T ij are at most |V |, so the total size is O(|A||V | 2 ). Finally, Reciprocate and Sum requires every participant to send each other one message: O(|A| 2 ). Hence the total communication complexity is O((|A| + |V |)|A||V |).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Timing results and effect of degree for Facebook, Enron and PGP data sets.",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "1. A protocol for multi-party private EBC computation; 2. A strengthened adversarial model in comparison to prior work-all participating networks are protected by edge-DP, even when the final output is published; 3. A high-probability utility bound on a core component of our protocol: private distributed release of ego networks; 4. Comprehensive empirical validation on open Facebook, Enron and PGP",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}